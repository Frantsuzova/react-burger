{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","components/order-cards/OrderCardStyles.module.css","components/spiner/Spiner.module.css","pages/page404.module.css","components/order-details/order-details.module.css","pages/profile.module.css","components/app-header/app-header.module.css","components/burger-constructor/burger-constructor.module.css","services/hooks.ts","services/actions/axios.ts","utils/data.ts","services/actions/auth.ts","components/app-header/app-header.tsx","images/done.svg","services/actions/index.ts","components/order-details/order-details.tsx","components/ingredient-details/ingredient-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-constructor/burger-constructor.tsx","components/burger-ingredients-card/burger-ingredients-card.tsx","components/burger-ingredients-category/burger-ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/mainPage.tsx","components/error-anons/error-anons.tsx","pages/login.tsx","pages/register.tsx","pages/forgotPassword.tsx","pages/resetPassword.tsx","components/order-cards/order-cards.tsx","components/spiner/spiner.tsx","pages/profile.tsx","pages/page404.tsx","components/order-numbers/order-numbers.tsx","services/actions/webSocket.ts","pages/feed.tsx","components/ProtectedRoute/LoggedProtectedRoute.tsx","components/ProtectedRoute/LoggedProtectedResetRoute.tsx","components/ProtectedRoute/UnloggedProtectedRoute.tsx","components/app/app.tsx","services/reducers/webSocket.ts","services/reducers/auth.ts","services/reducers/index.ts","services/store.ts","services/wsMiddleware/wsMiddleware.ts","index.tsx","pages/login.module.css","components/order-numbers/OrderNumbersStyles.module.css","pages/register.module.css","pages/resetPassword.module.css","components/ingredient-details/ingredient-details.module.css","pages/feedStyles.module.css","components/modal/modal.module.css","components/burger-ingredients-card/burger-ingredients-card.module.css","components/app/app.module.css","pages/forgotPassword.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-ingredients-category/burger-ingredients-category.module.css","components/error-anons/errorStyles.module.css"],"names":["module","exports","useDispatch","dispatchHook","useSelector","selectorHook","instance","require","create","baseURL","headers","interceptors","request","use","config","token","getCookie","Authorization","defaults","common","error","Promise","reject","response","a","origReqest","data","message","refreshToken","USER_SIGN_UP_REQUEST","USER_SIGN_UP_SUCCESS","USER_SIGN_UP_FAILED","USER_LOG_IN_REQUEST","USER_LOG_IN_SUCCESS","USER_LOG_IN_FAILED","USER_LOG_OUT_REQUEST","USER_LOG_OUT_SUCCESS","USER_LOG_OUT_FAILED","USER_FORGOT_REQUEST","USER_FORGOT_SUCCESS","USER_FORGOT_FAILED","USER_RESET_REQUEST","USER_RESET_SUCCESS","USER_RESET_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","USER_NEED_TO_REFRESH","PROFILE_IS_READY","GET_USER_REFRESH_REQUEST","GET_USER_REFRESH_SUCCESS","GET_USER_REFRESH_FAILED","USER_PROFILE_CHANGE_REQUEST","USER_PROFILE_CHANGE_SUCCESS","USER_PROFILE_CHANGE_FAILED","CLEAR_ERROR_PROFILE","CLEAR_ERROR_FORGOT","CLEAR_ERROR_REGISTRATION","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","document","cookie","matches","match","RegExp","replace","decodeURIComponent","undefined","profileChange","email","password","dispatch","type","patch","res","status","errorMessage","post","then","accessToken","split","AppHeader","logged","state","userInfo","location","useLocation","useEffect","pathname","className","appHeaderStyles","appheader","appheader__menu_list","appheader__menu_item_left","exact","to","link","activeClassName","activelink","appheader__menu_item_center","appheader__menu_item_right","GET_INGREDIENTS_API_REQUEST","GET_INGREDIENTS_API_SUCCESS","GET_INGREDIENTS_API_FAILED","SEND_ORDER_REQUEST","SEND_ORDER_SUCCESS","SEND_ORDER_FAILED","CONSTRUCTOR_BUN","CONSTRUCTOR_MAIN_INGREDIENTS","MODAL_INGRIDIENT_OPEN","MODAL_ORDER_OPEN","MODAL_CLOSE","MODAL_ORDER_ERROR","MODAL_ORDER_DETAIL_OPEN","WRITE_CURRENT_INGREDIENT","DELETE_CURRENT_INGREDIENT","TAB_SWITCH","CONSTRUCTOR_CARD_CHANGE","CONSTRUCTOR_CLEAN","COUNT_TOTAL_PRICE","COUNT_CARD","WRITE_CURRENT_ORDER_DETAIL","DELETE_CURRENT_ORDER_DETAIL","GET_INFO_ONE_ORDER_REQUEST","GET_INFO_ONE_ORDER_SUCCESS","GET_INFO_ONE_ORDER_ERROR","switchTab","e","deleteCard","mainIngredients","elemKey","totalCard","filtered","filter","elem","keyAdd","length","console","log","burgerData","counter","itemTypes","addCard","bun","newMainIngredients","newElem","item","includes","push","uuidv4","Object","assign","count","newTotal","counted","_id","find","indexOf","difference","x","concat","map","index","splice","openModalOrder","infoToSend","ingredients","open","countCostOrder","all","result","right","totalCost","sim","sort","price","reduce","b","countDate","createdAt","date","today","Number","getDate","toString","previosMonth","getMonth","presentYear","getFullYear","countedMonth","formatted","toLocaleDateString","day","hour","minute","timeZoneName","newDate","slice","i","arr","minusDay","orderDay","OrderDetails","path","useRouteMatch","id","useParams","modalInfo","isLoading","createdOrder","orderInfo","success","modal","detailOrderInfo","url","get","getOrder","styles","mainOrderDetailInfo","order__container","order__digitdecor","order","number","order__img","alt","src","check","Container","apiList","orders","orderDetailModal","detailOrderInfoHeader","doneStatus","total","orderInfoTotal","join","orderInfoTotalCost","Ingredients","noDuplicate","Array","from","Set","el","ingredientScroll","infoEat","scrollInside","imageAndNameOrder","orderImage","image_mobile","priceOrderInfo","Detail","content","ingredient__element","IngredientDetails","ingredient__container","ingredient__img","image_large","ingredient__info","calories","proteins","fat","carbohydrates","ModalOverlay","closeClick","overlay","onClick","modalRoot","getElementById","Modal","children","header","history","useHistory","closePopup","background","allClose","escapeClosed","useCallback","key","window","addEventListener","removeEventListener","createPortal","modal__space","modal__close_icon","modalBody","setIngr","constructorList","burgerConstructorStyles","burger_constructor__draggable_list","image","Ingredient","ref","useRef","useDrop","accept","collect","monitor","isOver","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","newIngredients","dragIngredient","switchCard","dropRef","useDrag","isDragging","opacity","dragRef","burger_constructor__draggable_list_item","style","text","thumbnail","handleClose","BurgerConstructor","drop","dropIngredient","mainPrice","bunPrice","countPrice","totalPrice","burger_constructor__main_list","burger_constructor__main_list_item","isLocked","burger_constructor__noingr_space","burger_constructor__noingr","burger_constructor__noingr_space_other","burger_constructor__order_details","size","cleanCounter","BurgerIngredientsCard","info","burgerIngredientsCardStyles","burgeringredients_card","currentIngredient","title","burgeringredients_card__ingredient_price","burgeringredients_card__ingredient_name","Cards","burgerIngredientsCategoryStyles","burger_ingredients_list","BurgerIngredientsCategory","textContent","cardType","MainTab","tabSwtich","currentTab","toSwitchTab","element","scrollIntoView","behavior","burgerIngredientsStyles","burgeringredients__tab_selector","active","BurgerIngredients","scrollRef","ingredientsScroll","target","childNodes","offsetHeight","sauce","clientHeight","scrollTop","burgeringredients__scroll_container","MainPage","orderModal","appStyles","container","DndProvider","backend","HTML5Backend","container_left","container_right","ErrorAnons","errorStyles","box","Login","hasError","useState","passwordValue","setPasswordValue","emailValue","setEmailValue","loginStyles","mainbox","onSubmit","preventDefault","input","onChange","errorText","placeholder","button","Register","registration","regInfo","nameValue","setnNameValue","registerStyles","ok","Error","userRegistration","ForgotPassword","forgotRequest","forgotStyles","test","ResetPassword","codeValue","setCodeValue","resetStyles","resetPassword","OrderCard","hiddenIconsCount","getDetailOrder","OrderCardStyles","done","currentOrder","mainConteiner","itemConteiner","mainInfoLine","mainInfo","orderDetail","lastImagespace","lastImage","plus","OrderCards","webSocketAll","Spiner","spinerStyles","spiner","ProfileMain","user","place","profileStyles","navigation","navDiv","noactivelink","navButton","logOut","detailedorder","component","ProfileInfo","OrderHistory","changeIsLoading","setNameValue","dontMatch","icon","orderHistoryBox","Promt","Profile","NotFound","page404Styles","OrderNumbers","doneOrders","inWorkOrders","totalToday","OrderNumbersStyles","main","table","ready","readyHeader","readyNumbers","inWorkTitle","inWorkNumbers","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","WS_CONNECTION_TO_CLOSE","Feed","feedStyles","mainBox","feedList","headerText","feed","LoggedProtectedRoute","rest","render","LoggedProtectedResetRoute","sent","UnloggedProtectedRoute","loadingUser","loadingRefresh","App","React","last","items","currentOrderNumber","currentOrderDetail","action","initialState","connected","close","inProfile","closing","initialRegistation","initialUserProfile","needToRefresh","refreshedTokens","failedToRefresh","profileReady","refreshed","failedToChange","initialForgotRequest","sending","initialIngredientsApi","initialIngredientsConstructorList","initialCurrentIngredient","initialModal","ingridientModal","modalError","initialOrder","initialTab","initialPrice","initialCurrentOrder","rootReducer","combineReducers","wsActions","wsInit","onOpen","onMessage","onClose","onSend","onError","ordersInit","enchancer","composeWithDevTools","compose","applyMiddleware","thunk","store","socket","next","WebSocket","onopen","event","onmessage","parsedData","JSON","parse","onerror","onclose","send","wsMiddleware","createStore","ReactDOM","StrictMode","basename"],"mappings":"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","file":"static/js/main.5f7011f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__2GbMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBox\":\"OrderCardStyles_mainBox__Macla\",\"price\":\"OrderCardStyles_price__1SEPt\",\"done\":\"OrderCardStyles_done__2l59z\",\"itemConteiner\":\"OrderCardStyles_itemConteiner__3lexg\",\"mainConteiner\":\"OrderCardStyles_mainConteiner__3Ap4e\",\"mainInfoLine\":\"OrderCardStyles_mainInfoLine__2oEXn\",\"mainInfo\":\"OrderCardStyles_mainInfo__3-Pft\",\"link\":\"OrderCardStyles_link__Et0Bv\",\"content\":\"OrderCardStyles_content__3xIQT\",\"orderDetail\":\"OrderCardStyles_orderDetail__1cOj4\",\"ingredients\":\"OrderCardStyles_ingredients__3Tpbn\",\"image\":\"OrderCardStyles_image__tK4ne\",\"lastImage\":\"OrderCardStyles_lastImage__205AJ\",\"lastImagespace\":\"OrderCardStyles_lastImagespace__2Rzhd\",\"plus\":\"OrderCardStyles_plus__1aXjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spiner_container__26KaV\",\"bun\":\"Spiner_bun__3UF_7\",\"ingredients\":\"Spiner_ingredients___v0QC\",\"spin\":\"Spiner_spin__3C_a4\",\"text\":\"Spiner_text__2-NLV\",\"spiner\":\"Spiner_spiner__1G-re\",\"load3\":\"Spiner_load3__3NWsQ\",\"spaces\":\"Spiner_spaces__3C9ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"page404_mainbox__apvVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order__container\":\"order-details_order__container__2tlqp\",\"order__img\":\"order-details_order__img__gKARh\",\"order__digitdecor\":\"order-details_order__digitdecor__hRfMx\",\"order__loading\":\"order-details_order__loading__8YDg-\",\"orderIcon\":\"order-details_orderIcon__2R6sT\",\"orderImage\":\"order-details_orderImage__3wCgB\",\"doneStatus\":\"order-details_doneStatus__1JV-u\",\"ingredientScroll\":\"order-details_ingredientScroll__1GwIZ\",\"orderDetailModal\":\"order-details_orderDetailModal__1Zi9y\",\"scrollInside\":\"order-details_scrollInside__1sYqW\",\"detailOrderInfoHeader\":\"order-details_detailOrderInfoHeader__BWF8n\",\"mainOrderDetailInfo\":\"order-details_mainOrderDetailInfo__2vQiJ\",\"infoEat\":\"order-details_infoEat__1KnTR\",\"imageAndNameOrder\":\"order-details_imageAndNameOrder__1z2dU\",\"priceOrderInfo\":\"order-details_priceOrderInfo__2TN7o\",\"orderInfoTotal\":\"order-details_orderInfoTotal__ld8eU\",\"orderInfoTotalCost\":\"order-details_orderInfoTotalCost__aiyed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"profile_mainbox__13INP\",\"box\":\"profile_box__39kqd\",\"navigation\":\"profile_navigation__1814f\",\"navDiv\":\"profile_navDiv__1k6VW\",\"orderHistoryBox\":\"profile_orderHistoryBox__tbb7p\",\"noactivelink\":\"profile_noactivelink__3FomX\",\"activelink\":\"profile_activelink__1sBOk\",\"navButton\":\"profile_navButton__2o3Y1\",\"text\":\"profile_text__3fRCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appheader\":\"app-header_appheader__3TnN2\",\"link\":\"app-header_link__3M9yP\",\"activelink\":\"app-header_activelink__3-26Q\",\"appheader__menu_list\":\"app-header_appheader__menu_list__3LK_X\",\"appheader__menu_item_left\":\"app-header_appheader__menu_item_left__1F4IX\",\"appheader__menu_item_center\":\"app-header_appheader__menu_item_center__hKKRx\",\"appheader__menu_item_right\":\"app-header_appheader__menu_item_right__rTD0n\",\"linkbox\":\"app-header_linkbox__NBCta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_constructor__main_list\":\"burger-constructor_burger_constructor__main_list__E__kw\",\"burger_constructor__noingr\":\"burger-constructor_burger_constructor__noingr__3eewf\",\"burger_constructor__noingr_space\":\"burger-constructor_burger_constructor__noingr_space__22k5A\",\"burger_constructor__noingr_space_other\":\"burger-constructor_burger_constructor__noingr_space_other__3rxKX\",\"burger_constructor__main_list_item\":\"burger-constructor_burger_constructor__main_list_item__1lDC3\",\"burger_constructor__draggable_list\":\"burger-constructor_burger_constructor__draggable_list__2oMLz\",\"burger_constructor__draggable_list_item\":\"burger-constructor_burger_constructor__draggable_list_item__3IoEM\",\"burger_constructor__order_details\":\"burger-constructor_burger_constructor__order_details__3ahtJ\"};","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\n\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { store } from './store';\r\nimport { TIndexActions } from './actions/index';\r\n\r\nimport { Location } from 'history';\r\n\r\nexport type RootStore = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport type AppThunk<ReturnType = void> = ActionCreator<\r\n    ThunkAction<ReturnType, Action, RootStore, TIndexActions>\r\n>;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootStore> = selectorHook;\r\n\r\nexport type Tlocation = Location & Idata\r\n\r\ninterface Idata {\r\n    background: { pathname: string | boolean }\r\n}\r\n\r\n\r\n","import { getCookie, refreshToken } from './auth';\r\nimport { dataUrl } from '../../utils/data';\r\n\r\nconst axios = require(\"axios\");\r\ninterface IConfig {\r\n    headers: {\r\n        Authorization: string\r\n    }\r\n}\r\n\r\nexport const instance = axios.create({\r\n    baseURL: dataUrl,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    (config: IConfig) => {\r\n        const token = getCookie(\"accessToken\");\r\n        if (token) {\r\n            config.headers.Authorization = \"Bearer \" + token;\r\n\r\n        } else {\r\n            delete instance.defaults.headers.common.Authorization;\r\n\r\n        }\r\n        return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n    (response: any) => response,\r\n    async (error: { config: object, response: { data: { message: string } } }) => {\r\n        const origReqest = error.config;\r\n        if (error.response.data.message === \"jwt expired\") {\r\n            const result = await refreshToken();\r\n            instance.defaults.headers.common[\"Authorization\"] =\r\n                \"Bearer\" + getCookie(\"accessToken\");\r\n            return instance(origReqest);\r\n        }\r\n        Promise.reject(error);\r\n    }\r\n);","const dataUrl = 'https://norma.nomoreparties.space/api';\r\n/*\r\nconst myData = [\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b1\",\r\n        \"name\": \"Краторная булка N-200i\",\r\n        \"type\": \"bun\",\r\n        \"proteins\": 80,\r\n        \"fat\": 24,\r\n        \"carbohydrates\": 53,\r\n        \"calories\": 420,\r\n        \"price\": 1255,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/bun-02.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/bun-02-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/bun-02-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b5\",\r\n        \"name\": \"Говяжий метеорит (отбивная)\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 800,\r\n        \"fat\": 800,\r\n        \"carbohydrates\": 300,\r\n        \"calories\": 2674,\r\n        \"price\": 3000,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-04.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-04-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-04-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b6\",\r\n        \"name\": \"Биокотлета из марсианской Магнолии\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 420,\r\n        \"fat\": 142,\r\n        \"carbohydrates\": 242,\r\n        \"calories\": 4242,\r\n        \"price\": 424,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-01.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-01-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-01-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b7\",\r\n        \"name\": \"Соус Spicy-X\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 30,\r\n        \"fat\": 20,\r\n        \"carbohydrates\": 40,\r\n        \"calories\": 30,\r\n        \"price\": 90,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-02.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-02-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-02-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b4\",\r\n        \"name\": \"Мясо бессмертных моллюсков Protostomia\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 433,\r\n        \"fat\": 244,\r\n        \"carbohydrates\": 33,\r\n        \"calories\": 420,\r\n        \"price\": 1337,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-02.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-02-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-02-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b9\",\r\n        \"name\": \"Соус традиционный галактический\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 42,\r\n        \"fat\": 24,\r\n        \"carbohydrates\": 42,\r\n        \"calories\": 99,\r\n        \"price\": 15,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-03.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-03-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-03-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b8\",\r\n        \"name\": \"Соус фирменный Space Sauce\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 50,\r\n        \"fat\": 22,\r\n        \"carbohydrates\": 11,\r\n        \"calories\": 14,\r\n        \"price\": 80,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-04.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-04-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-04-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bc\",\r\n        \"name\": \"Плоды Фалленианского дерева\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 20,\r\n        \"fat\": 5,\r\n        \"carbohydrates\": 55,\r\n        \"calories\": 77,\r\n        \"price\": 874,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sp_1.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sp_1-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sp_1-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bb\",\r\n        \"name\": \"Хрустящие минеральные кольца\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 808,\r\n        \"fat\": 689,\r\n        \"carbohydrates\": 609,\r\n        \"calories\": 986,\r\n        \"price\": 300,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/mineral_rings.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/mineral_rings-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/mineral_rings-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9ba\",\r\n        \"name\": \"Соус с шипами Антарианского плоскоходца\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 101,\r\n        \"fat\": 99,\r\n        \"carbohydrates\": 100,\r\n        \"calories\": 100,\r\n        \"price\": 88,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-01.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-01-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-01-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bd\",\r\n        \"name\": \"Кристаллы марсианских альфа-сахаридов\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 234,\r\n        \"fat\": 432,\r\n        \"carbohydrates\": 111,\r\n        \"calories\": 189,\r\n        \"price\": 762,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/core.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/core-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/core-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9be\",\r\n        \"name\": \"Мини-салат Экзо-Плантаго\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 1,\r\n        \"fat\": 2,\r\n        \"carbohydrates\": 3,\r\n        \"calories\": 6,\r\n        \"price\": 4400,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/salad.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/salad-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/salad-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b3\",\r\n        \"name\": \"Филе Люминесцентного тетраодонтимформа\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 44,\r\n        \"fat\": 26,\r\n        \"carbohydrates\": 85,\r\n        \"calories\": 643,\r\n        \"price\": 988,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-03.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-03-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-03-large.png\",\r\n        \"__v\": 1\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bf\",\r\n        \"name\": \"Сыр с астероидной плесенью\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 84,\r\n        \"fat\": 48,\r\n        \"carbohydrates\": 420,\r\n        \"calories\": 3377,\r\n        \"price\": 4142,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/cheese.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/cheese-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/cheese-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b2\",\r\n        \"name\": \"Флюоресцентная булка R2-D3\",\r\n        \"type\": \"bun\",\r\n        \"proteins\": 44,\r\n        \"fat\": 26,\r\n        \"carbohydrates\": 85,\r\n        \"calories\": 643,\r\n        \"price\": 988,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/bun-01.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/bun-01-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/bun-01-large.png\",\r\n        \"__v\": 1\r\n    }\r\n]\r\n*/\r\nexport { dataUrl };","import { instance } from \"./axios\";\r\nimport { Dispatch } from 'redux'\r\nimport { History } from 'history';\r\nimport { TUserInfo, Ires } from '../types/types'\r\n\r\nexport const USER_SIGN_UP_REQUEST: 'USER_SIGN_UP_REQUEST' = \"USER_SIGN_UP_REQUEST\";\r\nexport const USER_SIGN_UP_SUCCESS: 'USER_SIGN_UP_SUCCESS' = \"USER_SIGN_UP_SUCCESS\";\r\nexport const USER_SIGN_UP_FAILED: 'USER_SIGN_UP_FAILED' = \"USER_SIGN_UP_FAILED\";\r\n\r\nexport const USER_LOG_IN_REQUEST: 'USER_LOG_IN_REQUEST' = \"USER_LOG_IN_REQUEST\";\r\nexport const USER_LOG_IN_SUCCESS: 'USER_LOG_IN_SUCCESS' = \"USER_LOG_IN_SUCCESS\";\r\nexport const USER_LOG_IN_FAILED: 'USER_LOG_IN_FAILED' = \"USER_LOG_IN_FAILED\";\r\n\r\nexport const USER_LOG_OUT_REQUEST: 'USER_LOG_OUT_REQUEST' = \"USER_LOG_OUT_REQUEST\";\r\nexport const USER_LOG_OUT_SUCCESS: 'USER_LOG_OUT_SUCCESS' = \"USER_LOG_OUT_SUCCESS\";\r\nexport const USER_LOG_OUT_FAILED: 'USER_LOG_OUT_FAILED' = \"USER_LOG_OUT_FAILED\";\r\n\r\nexport const USER_FORGOT_REQUEST: 'USER_FORGOT_REQUEST' = \"USER_FORGOT_REQUEST\";\r\nexport const USER_FORGOT_SUCCESS: 'USER_FORGOT_SUCCESS' = \"USER_FORGOT_SUCCESS\";\r\nexport const USER_FORGOT_FAILED: 'USER_FORGOT_FAILED' = \"USER_FORGOT_FAILED\";\r\n\r\nexport const USER_RESET_REQUEST: 'USER_RESET_REQUEST' = \"USER_RESET_REQUEST\";\r\nexport const USER_RESET_SUCCESS: 'USER_RESET_SUCCESS' = \"USER_RESET_SUCCESS\";\r\nexport const USER_RESET_FAILED: 'USER_RESET_FAILED' = \"USER_RESET_FAILED\";\r\n\r\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = \"GET_USER_REQUEST\";\r\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = \"GET_USER_FAILED\";\r\n\r\nexport const USER_NEED_TO_REFRESH: 'USER_NEED_TO_REFRESH' = \"USER_NEED_TO_REFRESH\";\r\n\r\nexport const PROFILE_IS_READY: 'PROFILE_IS_READY' = \"PROFILE_IS_READY\";\r\n\r\nexport const GET_USER_REFRESH_REQUEST: 'GET_USER_REFRESH_REQUEST' = \"GET_USER_REFRESH_REQUEST\";\r\nexport const GET_USER_REFRESH_SUCCESS: 'GET_USER_REFRESH_SUCCESS' = \"GET_USER_REFRESH_SUCCESS\";\r\nexport const GET_USER_REFRESH_FAILED: 'GET_USER_REFRESH_FAILED' = \"GET_USER_REFRESH_FAILED\";\r\n\r\nexport const USER_PROFILE_CHANGE_REQUEST: 'USER_PROFILE_CHANGE_REQUEST' = \"USER_PROFILE_CHANGE_REQUEST\";\r\nexport const USER_PROFILE_CHANGE_SUCCESS: 'USER_PROFILE_CHANGE_SUCCESS' = \"USER_PROFILE_CHANGE_SUCCESS\";\r\nexport const USER_PROFILE_CHANGE_FAILED: 'USER_PROFILE_CHANGE_FAILED' = \"USER_PROFILE_CHANGE_FAILED\";\r\n\r\nexport const CLEAR_ERROR_PROFILE: 'CLEAR_ERROR_PROFILE' = \"CLEAR_ERROR_PROFILE\";\r\nexport const CLEAR_ERROR_FORGOT: 'CLEAR_ERROR_FORGOT' = \"CLEAR_ERROR_FORGOT\";\r\n\r\nexport const CLEAR_ERROR_REGISTRATION: 'CLEAR_ERROR_REGISTRATION' = \"CLEAR_ERROR_REGISTRATION\";\r\n\r\nexport interface IUserSignUpRequest {\r\n    readonly type: typeof USER_SIGN_UP_REQUEST;\r\n}\r\n\r\nexport interface IUserSignUpSuccess {\r\n    readonly type: typeof USER_SIGN_UP_SUCCESS;\r\n    readonly value: object;\r\n}\r\n\r\nexport interface IUserSignUpFailed {\r\n    readonly type: typeof USER_SIGN_UP_FAILED;\r\n    readonly value: string | number;\r\n}\r\n\r\nexport interface IUserLogInRequest {\r\n    readonly type: typeof USER_LOG_IN_REQUEST;\r\n}\r\n\r\nexport interface IUserLogInSuccess {\r\n    readonly type: typeof USER_LOG_IN_SUCCESS;\r\n    readonly value: TUserInfo;\r\n}\r\n\r\nexport interface IUserLogInFailed {\r\n    readonly type: typeof USER_LOG_IN_FAILED;\r\n    readonly value: string | number;\r\n}\r\n\r\nexport interface IUserLogOutRequest {\r\n    readonly type: typeof USER_LOG_OUT_REQUEST;\r\n}\r\n\r\nexport interface IUserLogOutSuccess {\r\n    readonly type: typeof USER_LOG_OUT_SUCCESS;\r\n    readonly value: TUserInfo;\r\n}\r\n\r\nexport interface IUserLogOutFailed {\r\n    readonly type: typeof USER_LOG_OUT_FAILED;\r\n    readonly value: string | number;\r\n}\r\n\r\nexport interface IUserForgotRequest {\r\n    readonly type: typeof USER_FORGOT_REQUEST;\r\n}\r\n\r\nexport interface IUserForgotSuccess {\r\n    readonly type: typeof USER_FORGOT_SUCCESS;\r\n    readonly value: object;\r\n}\r\n\r\nexport interface IUserForgotFailed {\r\n    readonly type: typeof USER_FORGOT_FAILED;\r\n    readonly value: string | number | null;\r\n}\r\n\r\nexport interface IUserResetRequest {\r\n    readonly type: typeof USER_RESET_REQUEST;\r\n}\r\n\r\nexport interface IUserResetSuccess {\r\n    readonly type: typeof USER_RESET_SUCCESS;\r\n    readonly value: object;\r\n}\r\n\r\nexport interface IUserResetFailed {\r\n    readonly type: typeof USER_RESET_FAILED;\r\n    readonly error: string | number;\r\n}\r\n\r\nexport interface IUserGetRequest {\r\n    readonly type: typeof GET_USER_REQUEST;\r\n}\r\n\r\nexport interface IUserGetSuccess {\r\n    readonly type: typeof GET_USER_SUCCESS;\r\n    readonly value: TUserInfo;\r\n}\r\n\r\nexport interface IUserGetFailed {\r\n    readonly type: typeof GET_USER_FAILED;\r\n    readonly error: object;\r\n    readonly errorMessage: object;\r\n\r\n}\r\n\r\nexport interface IUserNeedToRefresh {\r\n    readonly type: typeof USER_NEED_TO_REFRESH;\r\n    readonly value: boolean;\r\n}\r\nexport interface IUserPtofileIsReady {\r\n    readonly type: typeof PROFILE_IS_READY;\r\n    readonly value: boolean;\r\n}\r\n\r\nexport interface IUserRefreshRequest {\r\n    readonly type: typeof GET_USER_REFRESH_REQUEST;\r\n}\r\n\r\nexport interface IUserRefreshSuccess {\r\n    readonly type: typeof GET_USER_REFRESH_SUCCESS;\r\n    readonly value: object;\r\n}\r\n\r\nexport interface IUserRefreshFailed {\r\n    readonly type: typeof GET_USER_REFRESH_FAILED;\r\n    readonly error: object;\r\n}\r\n\r\nexport interface IUserProfileChangeRequest {\r\n    readonly type: typeof USER_PROFILE_CHANGE_REQUEST;\r\n}\r\n\r\nexport interface IUserProfileChangeSuccess {\r\n    readonly type: typeof USER_PROFILE_CHANGE_SUCCESS;\r\n    readonly value: TUserInfo;\r\n}\r\n\r\nexport interface IUserProfileChangeFailed {\r\n    readonly type: typeof USER_PROFILE_CHANGE_FAILED;\r\n    readonly error: string | number;\r\n    readonly errorMessage: string | number;\r\n}\r\n\r\nexport interface IClearErrorProfile {\r\n    readonly type: typeof CLEAR_ERROR_PROFILE;\r\n}\r\n\r\nexport interface IClearErrorForgot {\r\n    readonly type: typeof CLEAR_ERROR_FORGOT;\r\n}\r\n\r\nexport interface IClearErrorRegistration {\r\n    readonly type: typeof CLEAR_ERROR_REGISTRATION;\r\n}\r\n\r\nexport type TAuthActions =\r\n    | IClearErrorRegistration\r\n    | IClearErrorForgot\r\n    | IClearErrorProfile\r\n    | IUserProfileChangeFailed\r\n    | IUserProfileChangeSuccess\r\n    | IUserProfileChangeRequest\r\n    | IUserRefreshFailed\r\n    | IUserRefreshSuccess\r\n    | IUserRefreshRequest\r\n    | IUserPtofileIsReady\r\n    | IUserNeedToRefresh\r\n    | IUserGetFailed\r\n    | IUserGetSuccess\r\n    | IUserGetRequest\r\n    | IUserResetFailed\r\n    | IUserResetSuccess\r\n    | IUserResetRequest\r\n    | IUserForgotFailed\r\n    | IUserForgotSuccess\r\n    | IUserForgotRequest\r\n    | IUserLogOutFailed\r\n    | IUserLogOutSuccess\r\n    | IUserLogOutRequest\r\n    | IUserLogInFailed\r\n    | IUserLogInSuccess\r\n    | IUserLogInRequest\r\n    | IUserSignUpFailed\r\n    | IUserSignUpSuccess\r\n    | IUserSignUpRequest;\r\n\r\n\r\nexport function userRegistration(email: string, name: string, password: string, history: History | any) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            const res = await instance.post(\"auth/register\", {\r\n                email: email,\r\n                password: password,\r\n                name: name,\r\n            });\r\n            dispatch({\r\n                type: USER_SIGN_UP_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                dispatch({\r\n                    type: USER_SIGN_UP_SUCCESS,\r\n                    value: data,\r\n                });\r\n                history.replace({ pathname: \"/login\" });\r\n            }\r\n            if (!res.ok) {\r\n                throw new Error(res.status);\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: USER_SIGN_UP_FAILED,\r\n                value: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function userLogin(email: string, password: string) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            dispatch({\r\n                type: USER_LOG_IN_REQUEST,\r\n            });\r\n            const res = await instance.post(\"auth/login\", {\r\n                email: email,\r\n                password: password,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                setCookie(\"accessToken\", data.accessToken.split(\"Bearer \")[1], {\r\n                    path: \"/\",\r\n                });\r\n                document.cookie = `refreshToken=${data.refreshToken};  path=/`;\r\n                dispatch({\r\n                    type: USER_LOG_IN_SUCCESS,\r\n                    value: data,\r\n                });\r\n            }\r\n            if (res.status !== 200) {\r\n                dispatch({\r\n                    type: USER_LOG_IN_FAILED,\r\n                    value: res.status,\r\n                    errorMessage: res.data.message,\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n\r\n            dispatch({\r\n                type: USER_LOG_IN_FAILED,\r\n                value: error.status,\r\n            });\r\n        }\r\n    };\r\n}\r\ntype TprofileChange = {\r\n    status: number;\r\n    data: object;\r\n}\r\n\r\nexport function sendForgotRequest(info: any, history: History | any) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            dispatch({\r\n                type: USER_FORGOT_REQUEST,\r\n            });\r\n            const res = await instance.post(\"password-reset\", {\r\n                email: info,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                dispatch({\r\n                    type: USER_FORGOT_SUCCESS,\r\n                    value: data,\r\n                });\r\n            }\r\n            if (res.status !== 200) {\r\n                dispatch({\r\n                    type: USER_FORGOT_FAILED,\r\n                    value: res.status,\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: USER_FORGOT_FAILED,\r\n                value: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function setCookie(name: string, value: string, props: any) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == \"number\" && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + \"=\" + value;\r\n\r\n    for (const propName in props) {\r\n        updatedCookie += \"; \" + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += \"=\" + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n        new RegExp(\r\n            \"(?:^|; )\" +\r\n            name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\r\n            \"=([^;]*)\"\r\n        )\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function getUserRequest() {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            dispatch({\r\n                type: GET_USER_REQUEST,\r\n            });\r\n            const res = await instance.get(\"auth/user\");\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                dispatch({\r\n                    type: GET_USER_SUCCESS,\r\n                    value: data,\r\n                });\r\n                dispatch({\r\n                    type: PROFILE_IS_READY,\r\n                    value: true,\r\n                });\r\n            }\r\n            if (res.status !== 200) {\r\n                throw new Error(res.status);\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: PROFILE_IS_READY,\r\n                value: false,\r\n            });\r\n            dispatch({\r\n                type: GET_USER_FAILED,\r\n                errorMessage: error,\r\n                error: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function getUserRefresh(token: any, sendDataAgain: any) {\r\n    /*\r\n    const url = \"https://norma.nomoreparties.space/api/auth/token\";\r\n    return async function (dispatch: any) {\r\n        const requestOption = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                token: token,\r\n            }),\r\n        };\r\n        (async () => {\r\n            try {\r\n                dispatch({\r\n                    type: GET_USER_REFRESH_REQUEST,\r\n                });\r\n                const res = await fetch(url, requestOption);\r\n                const result = await res.json();\r\n                const last = await result;\r\n                if (res.ok) {\r\n                    dispatch({\r\n                        type: GET_USER_REFRESH_SUCCESS,\r\n                        value: last,\r\n                    });\r\n                    document.cookie = `accessToken=${last.accessToken.split(\"Bearer \")[1]\r\n                        }; path=/`;\r\n                    document.cookie = `refreshToken=${last.refreshToken}; path=/`;\r\n                    dispatch({\r\n                        type: PROFILE_IS_READY,\r\n                        value: true,\r\n                    });\r\n                    if (sendDataAgain) dispatch(sendDataAgain);\r\n                }\r\n                if (!res.ok) {\r\n                    throw new Error(last.message);\r\n                }\r\n            } catch (error: any) {\r\n                dispatch({\r\n                    type: GET_USER_REFRESH_FAILED,\r\n                    errorMessage: error.message,\r\n                });\r\n                dispatch({\r\n                    type: PROFILE_IS_READY,\r\n                    value: false,\r\n                });\r\n            }\r\n        })();\r\n    };\r\n    */\r\n    return instance\r\n        .post(\"auth/token\", {\r\n            token: getCookie(\"refreshToken\"),\r\n        })\r\n        .then((res: Ires) => {\r\n\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                document.cookie = `accessToken=${data.accessToken.split(\"Bearer \")[1]\r\n                    }; path=/`;\r\n                document.cookie = `refreshToken=${data.refreshToken}; path=/`\r\n            } else {\r\n                return res.data;\r\n            }\r\n        });\r\n}\r\n\r\nexport function logOut(history: History | any) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            const res = await instance.post(\"auth/logout\", {\r\n                token: getCookie(\"refreshToken\"),\r\n            });\r\n            dispatch({\r\n                type: USER_LOG_OUT_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                document.cookie =\r\n                    `accessToken=${getCookie(\"accessToken\")}; path=/; expires=` +\r\n                    new Date(-1).toUTCString();\r\n                document.cookie =\r\n                    `refreshToken=${getCookie(\"refreshToken\")}; path=/; expires=` +\r\n                    new Date(-1).toUTCString();\r\n                dispatch({\r\n                    type: USER_LOG_OUT_SUCCESS,\r\n                    value: data,\r\n                });\r\n                history.replace({ pathname: \"/login\" });\r\n            }\r\n            if (res.status !== 200) {\r\n                throw new Error(res.status);\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: USER_LOG_OUT_FAILED,\r\n                value: error,\r\n            });\r\n        }\r\n    };\r\n}\r\nexport function profileChange(email: string, password: string, name: string) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            dispatch({\r\n                type: USER_PROFILE_CHANGE_REQUEST,\r\n            });\r\n            const res: any = await instance.patch(\"auth/user\", {\r\n                email: email,\r\n                password: password,\r\n                name: name,\r\n            })\r\n            dispatch({\r\n                type: USER_PROFILE_CHANGE_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: USER_PROFILE_CHANGE_SUCCESS,\r\n                    value: res.data,\r\n                });\r\n            }\r\n            if (res.status !== 200) {\r\n                dispatch({\r\n                    type: USER_PROFILE_CHANGE_FAILED,\r\n                    error: res.status,\r\n                    errorMessage: res.status\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: USER_PROFILE_CHANGE_FAILED,\r\n                error: error,\r\n                errorMessage: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport function resetPassword(password: string, token: string, history: History | any) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            dispatch({\r\n                type: USER_RESET_REQUEST,\r\n            });\r\n            const res = await instance.post(\"password-reset/reset\", {\r\n                password: password,\r\n                token: token,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                dispatch({\r\n                    type: USER_RESET_SUCCESS,\r\n                    value: data,\r\n                });\r\n                history.replace({ pathname: \"/\" });\r\n            }\r\n            if (res.status !== 200) {\r\n                dispatch({\r\n                    type: USER_RESET_FAILED,\r\n                    error: res.status,\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: USER_RESET_FAILED,\r\n                error: error.status,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function clearNoLogIn() {\r\n    return function (dispatch: Dispatch<TAuthActions>): void {\r\n        dispatch({\r\n            type: CLEAR_ERROR_PROFILE,\r\n        });\r\n        dispatch({\r\n            type: CLEAR_ERROR_FORGOT,\r\n        });\r\n        dispatch({\r\n            type: CLEAR_ERROR_REGISTRATION,\r\n        });\r\n    };\r\n}\r\n\r\nexport function changeProfileInfo(email: string, password: string, name: string) {\r\n    return async function (dispatch: Dispatch<TAuthActions>) {\r\n        try {\r\n            dispatch({\r\n                type: USER_PROFILE_CHANGE_REQUEST,\r\n            });\r\n            const res: any = await instance.patch(\"auth/user\", {\r\n                email: email,\r\n                password: password,\r\n                name: name,\r\n            })\r\n            dispatch({\r\n                type: USER_PROFILE_CHANGE_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: USER_PROFILE_CHANGE_SUCCESS,\r\n                    value: res.data,\r\n                });\r\n            }\r\n            if (res.status !== 200) {\r\n                dispatch({\r\n                    type: USER_PROFILE_CHANGE_FAILED,\r\n                    error: res.status,\r\n                    errorMessage: res.status\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: USER_PROFILE_CHANGE_FAILED,\r\n                error: error,\r\n                errorMessage: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport async function refreshToken() {\r\n    return instance\r\n        .post(\"auth/token\", {\r\n            token: getCookie(\"refreshToken\"),\r\n        })\r\n        .then((res: Ires) => {\r\n\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                document.cookie = `accessToken=${data.accessToken.split(\"Bearer \")[1]\r\n                    }; path=/`;\r\n                document.cookie = `refreshToken=${data.refreshToken}; path=/`\r\n            } else {\r\n                return res.data;\r\n            }\r\n        });\r\n}\r\n\r\n","import appHeaderStyles from './app-header.module.css';\r\n// компонент\r\nimport MenuItem from '../menu-item/menu-item';\r\n// компоненты от яндекса\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks'\r\nimport {\r\n    clearNoLogIn,\r\n} from \"../../services/actions/auth\";\r\n\r\nexport default function AppHeader() {\r\n    const { logged } =\r\n        useSelector((state) => state.userInfo);\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!logged) {\r\n            dispatch(clearNoLogIn());\r\n        }\r\n    }, [location.pathname]);\r\n    return (\r\n        <header>\r\n            <nav className={appHeaderStyles.appheader}>\r\n                <ul className={appHeaderStyles.appheader__menu_list}>\r\n                    <li className={appHeaderStyles.appheader__menu_item_left}>\r\n                        <NavLink\r\n                            exact\r\n                            to={{ pathname: \"/\" }}\r\n                            className={appHeaderStyles.link}\r\n                            activeClassName={appHeaderStyles.activelink}\r\n                        >\r\n                            <BurgerIcon type=\"primary\" />\r\n                            <span className=\"text text_type_main-default text_color_inactive ml-2 mr-5\">Конструктор</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={appHeaderStyles.appheader__menu_item_left}>\r\n                        <NavLink\r\n                            exact\r\n                            to={{ pathname: \"/feed\" }}\r\n                            className={appHeaderStyles.link}\r\n                            activeClassName={appHeaderStyles.activelink}\r\n                        >\r\n                            <ListIcon type=\"secondary\" />\r\n                            <span className=\"text text_type_main-default text_color_inactive ml-2 mr-5\">Лента&nbsp;заказов</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={appHeaderStyles.appheader__menu_item_center}>\r\n                        <NavLink exact to={{ pathname: \"/\" }} >\r\n                            <Logo />\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={appHeaderStyles.appheader__menu_item_right}>\r\n                        <NavLink\r\n                            to={{ pathname: \"/profile\" }}\r\n                            className={appHeaderStyles.link}\r\n                            activeClassName={appHeaderStyles.activelink}\r\n                        >\r\n                            <ProfileIcon type=\"secondary\" />\r\n                            <span className=\"text text_type_main-default text_color_inactive ml-2 mr-5\">Личный&nbsp;кабинет</span>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/done.3ba9e5cd.svg\";","import { TIngredient, TOrderSend, TModalData, Ielem, IElemInconstructor, IIngredientElem, newObj } from '../types/types'\r\nimport { Dispatch } from 'redux';\r\nimport { instance } from \"./axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const GET_INGREDIENTS_API_REQUEST: 'GET_INGREDIENTS_API_REQUEST' = \"GET_INGREDIENTS_API_REQUEST\";\r\nexport const GET_INGREDIENTS_API_SUCCESS: 'GET_INGREDIENTS_API_SUCCESS' = \"GET_INGREDIENTS_API_SUCCESS\";\r\nexport const GET_INGREDIENTS_API_FAILED: 'GET_INGREDIENTS_API_FAILED' = \"GET_INGREDIENTS_API_FAILED\";\r\n\r\nexport const SEND_ORDER_REQUEST: 'SEND_ORDER_REQUEST' = \"SEND_ORDER_REQUEST\";\r\nexport const SEND_ORDER_SUCCESS: 'SEND_ORDER_SUCCESS' = \"SEND_ORDER_SUCCESS\";\r\nexport const SEND_ORDER_FAILED: 'SEND_ORDER_FAILED' = \"SEND_ORDER_FAILED\";\r\n\r\nexport const CONSTRUCTOR_BUN: 'CONSTRUCTOR_BUN' = \"CONSTRUCTOR_BUN\";\r\n\r\nexport const CONSTRUCTOR_MAIN_INGREDIENTS: 'CONSTRUCTOR_MAIN_INGREDIENTS' = \"CONSTRUCTOR_MAIN_INGREDIENTS\";\r\n\r\nexport const MODAL_INGRIDIENT_OPEN: 'MODAL_INGRIDIENT_OPEN' = \"MODAL_INGRIDIENT_OPEN\";\r\nexport const MODAL_ORDER_OPEN: 'MODAL_ORDER_OPEN' = \"MODAL_ORDER_OPEN\";\r\nexport const MODAL_CLOSE: 'MODAL_CLOSE' = \"MODAL_CLOSE\";\r\nexport const MODAL_ORDER_ERROR: 'MODAL_ORDER_ERROR' = \"MODAL_ORDER_ERROR\";\r\nexport const MODAL_ORDER_DETAIL_OPEN: 'MODAL_ORDER_DETAIL_OPEN' = \"MODAL_ORDER_DETAIL_OPEN\";\r\n\r\nexport const WRITE_CURRENT_INGREDIENT: 'WRITE_CURRENT_INGREDIENT' = \"WRITE_CURRENT_INGREDIENT\";\r\nexport const DELETE_CURRENT_INGREDIENT: 'DELETE_CURRENT_INGREDIENT' = \"DELETE_CURRENT_INGREDIENT\";\r\n\r\nexport const TAB_SWITCH: 'TAB_SWITCH' = \"TAB_SWITCH\";\r\n\r\nexport const CONSTRUCTOR_CARD_CHANGE: 'CONSTRUCTOR_CARD_CHANGE' = \"CONSTRUCTOR_CARD_CHANGE\";\r\nexport const CONSTRUCTOR_CLEAN: 'CONSTRUCTOR_CLEAN' = \"CONSTRUCTOR_CLEAN\";\r\n\r\nexport const COUNT_TOTAL_PRICE: 'COUNT_TOTAL_PRICE' = \"COUNT_TOTAL_PRICE\";\r\n\r\nexport const COUNT_CARD: 'COUNT_CARD' = \"COUNT_CARD\";\r\n\r\nexport const WRITE_CURRENT_ORDER_DETAIL: 'WRITE_CURRENT_ORDER_DETAIL' = \"WRITE_CURRENT_ORDER_DETAIL\";\r\nexport const DELETE_CURRENT_ORDER_DETAIL: 'DELETE_CURRENT_ORDER_DETAIL' = \"DELETE_CURRENT_ORDER_DETAIL\";\r\n\r\nexport const GET_INFO_ONE_ORDER_REQUEST: 'GET_INFO_ONE_ORDER_REQUEST' = \"GET_INFO_ONE_ORDER_REQUEST\";\r\nexport const GET_INFO_ONE_ORDER_SUCCESS: 'GET_INFO_ONE_ORDER_SUCCESS' = \"GET_INFO_ONE_ORDER_SUCCESS\";\r\nexport const GET_INFO_ONE_ORDER_ERROR: 'GET_INFO_ONE_ORDER_ERROR' = \"GET_INFO_ONE_ORDER_ERROR\";\r\n\r\nexport interface IGetIngredientsApiRequest {\r\n    readonly type: typeof GET_INGREDIENTS_API_REQUEST;\r\n}\r\n\r\nexport interface IGetIngredientsApiSuccess {\r\n    readonly type: typeof GET_INGREDIENTS_API_SUCCESS;\r\n    readonly items: Array<TIngredient>\r\n}\r\n\r\nexport interface IGetIngredientsApiFailed {\r\n    readonly type: typeof GET_INGREDIENTS_API_FAILED;\r\n    readonly error: object\r\n}\r\n\r\nexport interface ISendOrderRequest {\r\n    readonly type: typeof SEND_ORDER_REQUEST;\r\n}\r\n\r\nexport interface ISendOrderSuccess {\r\n    readonly type: typeof SEND_ORDER_SUCCESS;\r\n    readonly data: TOrderSend\r\n}\r\n\r\nexport interface ISendOrderFailed {\r\n    readonly type: typeof SEND_ORDER_FAILED;\r\n    readonly error: object\r\n}\r\n\r\nexport interface IConstructorBun {\r\n    readonly type: typeof CONSTRUCTOR_BUN;\r\n    readonly bun: TIngredient | null\r\n}\r\n\r\nexport interface IConstructorMainIngredients {\r\n    readonly type: typeof CONSTRUCTOR_MAIN_INGREDIENTS;\r\n    readonly mainIngredients: Array<TIngredient>\r\n}\r\n\r\n\r\nexport interface IModalOpenIngredient {\r\n    readonly type: typeof MODAL_INGRIDIENT_OPEN;\r\n    readonly open: boolean\r\n}\r\n\r\nexport interface IModalOpenOrder {\r\n    readonly type: typeof MODAL_ORDER_OPEN;\r\n    readonly open: boolean\r\n}\r\n\r\nexport interface IModalOpenOrderDetail {\r\n    readonly type: typeof MODAL_ORDER_DETAIL_OPEN;\r\n    readonly open: boolean\r\n}\r\n\r\nexport interface IModalOpenError {\r\n    readonly type: typeof MODAL_ORDER_ERROR;\r\n    readonly open: boolean\r\n}\r\n\r\nexport interface IModalClose {\r\n    readonly type: typeof MODAL_CLOSE;\r\n}\r\n\r\nexport interface IWhireCurrentIngredient {\r\n    readonly type: typeof WRITE_CURRENT_INGREDIENT;\r\n    readonly name: string;\r\n    readonly image: string;\r\n    readonly calories: number;\r\n    readonly proteins: number;\r\n    readonly fat: number;\r\n    readonly carbohydrates: number;\r\n\r\n}\r\n\r\nexport interface IDeleteCurrentIngredient {\r\n    readonly type: typeof DELETE_CURRENT_INGREDIENT;\r\n}\r\n\r\nexport interface ITabSwitch {\r\n    readonly type: typeof TAB_SWITCH;\r\n    readonly value: string;\r\n}\r\n\r\nexport interface IConstructorCardChange {\r\n    readonly type: typeof CONSTRUCTOR_CARD_CHANGE;\r\n    readonly value: Array<TIngredient>;\r\n}\r\n\r\nexport interface IConstructorClean {\r\n    readonly type: typeof CONSTRUCTOR_CLEAN;\r\n}\r\n\r\nexport interface ICountTotalPrice {\r\n    readonly type: typeof COUNT_TOTAL_PRICE;\r\n    readonly value: number | null;\r\n}\r\n\r\nexport interface ICountCard {\r\n    readonly type: typeof COUNT_CARD;\r\n    readonly value: Array<TIngredient>\r\n}\r\n\r\nexport interface IWriteCurrentOrderDetail {\r\n    readonly type: typeof WRITE_CURRENT_ORDER_DETAIL;\r\n    readonly number: number;\r\n    readonly name: string;\r\n    readonly status: string;\r\n    readonly ingredients: Array<object>;\r\n    readonly date: string;\r\n\r\n}\r\nexport interface IDeleteCurrentOrderDetail {\r\n    readonly type: typeof DELETE_CURRENT_ORDER_DETAIL;\r\n}\r\n\r\nexport interface IGetIngoOneOrderRequest {\r\n    readonly type: typeof GET_INFO_ONE_ORDER_REQUEST;\r\n}\r\n\r\nexport interface IGetIngoOneOrderSuccess {\r\n    readonly type: typeof GET_INFO_ONE_ORDER_SUCCESS;\r\n    readonly value: TModalData\r\n}\r\n\r\nexport interface IGetIngoOneOrderError {\r\n    readonly type: typeof GET_INFO_ONE_ORDER_ERROR;\r\n    readonly value: object\r\n}\r\n\r\nexport type TIndexActions =\r\n    | IGetIngoOneOrderError\r\n    | IGetIngoOneOrderSuccess\r\n    | IGetIngoOneOrderRequest\r\n    | IDeleteCurrentOrderDetail\r\n    | IWriteCurrentOrderDetail\r\n    | ICountCard\r\n    | ICountTotalPrice\r\n    | IConstructorClean\r\n    | IConstructorCardChange\r\n    | ITabSwitch\r\n    | IDeleteCurrentIngredient\r\n    | IWhireCurrentIngredient\r\n    | IModalClose\r\n    | IModalOpenError\r\n    | IModalOpenOrderDetail\r\n    | IModalOpenOrder\r\n    | IModalOpenIngredient\r\n    | IConstructorMainIngredients\r\n    | IConstructorBun\r\n    | ISendOrderFailed\r\n    | ISendOrderSuccess\r\n    | ISendOrderRequest\r\n    | IGetIngredientsApiFailed\r\n    | IGetIngredientsApiSuccess\r\n    | IGetIngredientsApiRequest;\r\n\r\n\r\nexport function getIngredients() {\r\n    return async function (dispatch: Dispatch<TIndexActions>) {\r\n        try {\r\n            const res = await instance.get(\"ingredients\");\r\n            dispatch({\r\n                type: GET_INGREDIENTS_API_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res.data;\r\n                const last = data.map((elem: Ielem) => {\r\n                    elem.keyAdd = 0;\r\n                    elem.key = elem._id;\r\n                    elem.counter = 0;\r\n                    return elem;\r\n                });\r\n                dispatch({\r\n                    type: GET_INGREDIENTS_API_SUCCESS,\r\n                    items: last,\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: GET_INGREDIENTS_API_FAILED,\r\n                error: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function getConstructorIngredients(data: Array<TIngredient>) {\r\n    const bun: any = data.find((elem: TIngredient) => {\r\n        if (elem.type === \"bun\") { return elem }\r\n        else return null\r\n    }) || null;\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: CONSTRUCTOR_BUN,\r\n            bun: bun,\r\n        });\r\n        dispatch({\r\n            type: CONSTRUCTOR_MAIN_INGREDIENTS,\r\n            mainIngredients: data.filter((elem: IElemInconstructor) => elem.type !== \"bun\"),\r\n        });\r\n        dispatch({\r\n            type: COUNT_TOTAL_PRICE,\r\n            value: data.map((elem: IElemInconstructor) => elem.price).reduce((a: number, b: number | undefined) => a + b!, 0) || null,\r\n        });\r\n    };\r\n}\r\n\r\nexport function currentIngredient(elem: IIngredientElem) {\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: WRITE_CURRENT_INGREDIENT,\r\n            name: elem.name,\r\n            image: elem.image_large,\r\n            calories: elem.calories,\r\n            proteins: elem.proteins,\r\n            fat: elem.fat,\r\n            carbohydrates: elem.carbohydrates,\r\n        });\r\n        dispatch({\r\n            type: MODAL_INGRIDIENT_OPEN,\r\n            open: true,\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function sendOrderAxios(data: Array<object>) {\r\n    return async function (dispatch: Dispatch<TIndexActions>) {\r\n        try {\r\n            dispatch({\r\n                type: SEND_ORDER_REQUEST,\r\n            });\r\n            const res = await instance.post(\"orders\", {\r\n                ingredients: data,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                dispatch({\r\n                    type: SEND_ORDER_SUCCESS,\r\n                    data: data,\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: SEND_ORDER_FAILED,\r\n                error: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function switchTab(e: string) {\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: TAB_SWITCH,\r\n            value: e,\r\n        });\r\n    };\r\n}\r\n\r\nexport function switchCard(dragIndex: number, hoverIndex: number, ingredients: Array<TIngredient>) {\r\n    const newIngredients = [...ingredients];\r\n    const dragIngredient = newIngredients[dragIndex];\r\n    newIngredients.splice(dragIndex, 1);\r\n    newIngredients.splice(hoverIndex, 0, dragIngredient);\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: CONSTRUCTOR_CARD_CHANGE,\r\n            value: newIngredients,\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function deleteCard(mainIngredients: Array<TIngredient>, elemKey: TIngredient, totalCard: any) {\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        const filtered = mainIngredients.filter((elem) => {\r\n            elem.keyAdd--;\r\n            return elem !== elemKey;\r\n        });\r\n\r\n        if (filtered.length === 0) {\r\n            console.log('totalCard.burgerData', totalCard.burgerData)\r\n            totalCard.burgerData.filter((elem: { type: string, counter: number }) => {\r\n                if (elem.type !== 'bun') {\r\n                    elem.counter = 0\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        dispatch({\r\n            type: CONSTRUCTOR_CARD_CHANGE,\r\n            value: filtered,\r\n        });\r\n        dispatch({\r\n            type: COUNT_CARD,\r\n            value: totalCard.burgerData,\r\n        });\r\n    };\r\n}\r\n\r\nexport function countPrice(mainIngredients: Array<TIngredient>, bun: TIngredient) {\r\n    let mainPrice = 0;\r\n    let bunPrice = 0;\r\n    if (bun.type) {\r\n        bunPrice = bun.price * 2;\r\n    }\r\n    if (!bun.type) {\r\n        bunPrice = 0;\r\n    }\r\n    if (mainIngredients.length > 0) {\r\n        mainPrice = mainIngredients\r\n            .map((elem) => elem.price)\r\n            .reduce((a, b) => a + b, 0);\r\n    }\r\n    if (mainIngredients.length === 0) {\r\n        mainPrice = 0;\r\n    }\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: COUNT_TOTAL_PRICE,\r\n            value: bunPrice + mainPrice,\r\n        });\r\n    };\r\n}\r\n\r\nexport const itemTypes = {\r\n    constructor: \"movableCard\",\r\n    ingredient: \"addbleCard\",\r\n};\r\n\r\n\r\nexport function addCard(elem: any, mainIngredients: Array<TIngredient>, bun: TIngredient | null) {\r\n    let newMainIngredients = [...mainIngredients];\r\n    let newElem: any = {};\r\n    if (elem.item)\r\n        return function (dispatch: Dispatch<TIndexActions>) {\r\n\r\n            if (elem.item.type === \"bun\" && elem.item !== bun) {\r\n                elem.item.counter = 2;\r\n                console.log('1', bun)\r\n                if (bun && bun?.counter !== 0) {\r\n                    console.log('2', bun)\r\n                    elem.item.counter--;\r\n                    bun.counter = 0;\r\n\r\n                }\r\n                elem.item.counter = 2;\r\n                dispatch({\r\n                    type: CONSTRUCTOR_BUN,\r\n                    bun: elem.item,\r\n                });\r\n            }\r\n            if (elem.item.type !== \"bun\" && !mainIngredients.includes(elem.item)) {\r\n                newMainIngredients.push(elem.item);\r\n                elem.item.keyAdd = uuidv4();\r\n\r\n            }\r\n            if (elem.item.type !== \"bun\" && mainIngredients.includes(elem.item)) {\r\n                Object.assign(newElem, elem.item);\r\n                newMainIngredients.push(newElem);\r\n                newElem.keyAdd = uuidv4();\r\n\r\n            }\r\n            dispatch({\r\n                type: CONSTRUCTOR_MAIN_INGREDIENTS,\r\n                mainIngredients: newMainIngredients,\r\n            });\r\n        };\r\n}\r\n\r\n\r\nexport function count(mainIngredients: Array<TIngredient>, elemKey: { _id: string }, totalCard: any) {\r\n    const newTotal = [...totalCard.burgerData].filter(\r\n        (elem: any) => elem.type !== \"bun\"\r\n    );\r\n    const newMainIngredients = [...mainIngredients];\r\n    const counted = newMainIngredients.filter(\r\n        (elem: any) => elem._id === elemKey._id\r\n    ).length;\r\n    const exact: any = newTotal.find((elem: any) => elem._id === elemKey._id);\r\n\r\n    const filtered = newTotal.indexOf(exact);\r\n\r\n    const difference = newTotal\r\n        .filter((x) => !newMainIngredients.includes(x))\r\n        .concat(newMainIngredients.filter((x) => !newTotal.includes(x)));\r\n\r\n    if (difference) {\r\n        difference.map((elem: any) => {\r\n            elem.counter = 0;\r\n            return elem;\r\n        });\r\n        newTotal.concat(difference).filter((elem: any, index) => {\r\n            return newTotal.indexOf(elem) === index && elem.counter === 0;\r\n        });\r\n    }\r\n\r\n    exact.counter = counted;\r\n    newTotal.splice(filtered, 1, exact);\r\n\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: COUNT_CARD,\r\n            value: totalCard.burgerData,\r\n        });\r\n    };\r\n}\r\n\r\nexport function closeModal() {\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: MODAL_CLOSE,\r\n        });\r\n        dispatch({\r\n            type: DELETE_CURRENT_INGREDIENT,\r\n        });\r\n    };\r\n}\r\n\r\nexport function openModalOrder(infoToSend: any) {\r\n    return function (dispatch: any) {\r\n        if (infoToSend) {\r\n            dispatch({\r\n                type: CONSTRUCTOR_CLEAN,\r\n            });\r\n            dispatch(sendOrderAxios(infoToSend));\r\n            dispatch({\r\n                type: MODAL_ORDER_OPEN,\r\n                open: true,\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: MODAL_ORDER_ERROR,\r\n                open: true,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function cleanCounter(total: any) {\r\n    const result = total.map((elem: { counter: number }) => {\r\n        elem.counter = 0;\r\n        return elem;\r\n    });\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: COUNT_CARD,\r\n            value: result,\r\n        });\r\n    };\r\n}\r\n\r\nexport function countCostOrder(all: any, ingredients: Array<object>) {\r\n\r\n\r\n    let result: {\r\n        right: null | Array<newObj>;\r\n        totalCost: null | number;\r\n    } = {\r\n        right: null,\r\n        totalCost: null,\r\n    };\r\n\r\n    const sim = all\r\n        .filter((x: any) => ingredients.includes(x._id))\r\n        .concat(ingredients.filter((x) => all.includes(x)));\r\n\r\n\r\n    result.right = sim.sort((a: any) => {\r\n        if (a.type === \"bun\") {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n    if (result && result.right)\r\n        result.totalCost = result.right\r\n            .map((elem: any) => {\r\n                if (elem.type === \"bun\") {\r\n                    return elem.price * 2;\r\n                }\r\n                if (elem.type !== \"bun\") {\r\n                    return elem.price;\r\n                }\r\n            })\r\n            .reduce((a, b) => a + b, 0);\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport function countDate(createdAt: string) {\r\n    function daysInMonth(month: number, year: number) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    const date = new Date(createdAt);\r\n    const today = Number(new Date().getDate().toString());\r\n    const previosMonth: number = Number(new Date().getMonth().toString());\r\n\r\n    const presentYear: number = Number(new Date().getFullYear().toString());\r\n\r\n    const countedMonth = daysInMonth(previosMonth, presentYear);\r\n\r\n    const options: object = {\r\n        day: \"2-digit\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        timeZoneName: \"short\",\r\n    };\r\n\r\n    const formatted = date\r\n        .toLocaleDateString(\"ru-RU\", options)\r\n        .toString()\r\n        .replace(/[,.]/g, \"\")\r\n        .split(\" \");\r\n    const newDate = formatted.slice();\r\n    formatted.map((elem, i, arr: any) => {\r\n        let minusDay = today - arr[0];\r\n        const orderDay = Number(arr[0]);\r\n        if (minusDay <= 0) {\r\n            minusDay = Number(countedMonth) - Number(orderDay) + 1;\r\n        }\r\n        if (orderDay === today) {\r\n            newDate.splice(0, 1, \"Сегодня,\");\r\n        }\r\n        if (orderDay === today - 1) {\r\n            newDate.splice(0, 1, \"Вчера,\");\r\n        }\r\n        if (orderDay > today && orderDay !== today - 1) {\r\n            newDate.splice(\r\n                0,\r\n                1,\r\n                minusDay === 1\r\n                    ? \"Вчера,\"\r\n                    : `${minusDay} ${minusDay <= 4 ? \"дня\" : \"дней\"} назад`\r\n            );\r\n        }\r\n        if (orderDay < today && orderDay !== today - 1) {\r\n            newDate.splice(\r\n                0,\r\n                1,\r\n                minusDay === 1\r\n                    ? \"Вчера,\"\r\n                    : `${minusDay} ${minusDay <= 4 ? \"дня\" : \"дней\"} назад`\r\n            );\r\n        }\r\n        newDate.splice(2, 1, `i-${arr[2]}`);\r\n    });\r\n    return newDate;\r\n}\r\n\r\nexport function currentOrder(elem: { number: number, name: string, status: string, ingredients: Array<object>, createdAt: string }) {\r\n    return function (dispatch: Dispatch<TIndexActions>) {\r\n        dispatch({\r\n            type: WRITE_CURRENT_ORDER_DETAIL,\r\n            number: elem.number,\r\n            name: elem.name,\r\n            status: elem.status,\r\n            ingredients: elem.ingredients,\r\n            date: elem.createdAt,\r\n        });\r\n        dispatch({\r\n            type: MODAL_ORDER_DETAIL_OPEN,\r\n            open: true,\r\n        });\r\n    };\r\n}\r\n\r\nexport function getOrder(url: string) {\r\n    return async function (dispatch: Dispatch<TIndexActions>) {\r\n        try {\r\n            const res = await instance.get(url);\r\n            dispatch({\r\n                type: GET_INFO_ONE_ORDER_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                const { data } = res;\r\n                //\r\n                dispatch({\r\n                    type: GET_INFO_ONE_ORDER_SUCCESS,\r\n                    value: data,\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            dispatch({\r\n                type: GET_INFO_ONE_ORDER_ERROR,\r\n                value: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport type TindexActions = {\r\n\r\n}","import check from \"../../images/done.svg\";\r\nimport styles from \"./order-details.module.css\";\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n    countDate,\r\n    countCostOrder,\r\n} from \"../../services/actions/index\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrder } from \"../../services/actions/index\";\r\nimport Spiner from \"../spiner/spiner\";\r\nimport { getCookie } from \"../../services/actions/auth\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { newObj } from '../../services/types/types'\r\n\r\ntype QuizParams = {\r\n    id: string;\r\n};\r\n\r\n\r\n\r\nexport default function OrderDetails() {\r\n    const { path } = useRouteMatch();\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<QuizParams>();\r\n    const { isLoading, data } = useSelector(\r\n        (state) => state.modalInfo\r\n    );\r\n    const { orderInfo, success } = useSelector((state) => state.createdOrder)\r\n    const modal = useSelector((state) => state.modalInfo.detailOrderInfo);\r\n    const url =\r\n        path === \"/profile/orders/:id\"\r\n            ? `/orders?token=${getCookie(\"accessToken\")}`\r\n            : \"/orders/all\";\r\n    useEffect(() => {\r\n        if (!modal) dispatch(getOrder(url));\r\n    }, []);\r\n    console.log('orderInfo', orderInfo)\r\n    // console.log(url)\r\n\r\n    return (\r\n        <div className={styles.mainOrderDetailInfo + \"pb-15\"}>\r\n\r\n\r\n\r\n\r\n            {!modal && success && orderInfo && (<div className={styles.order__container + \"pt-30 pb-25\"}>\r\n\r\n                <div className=\"mb-8\">\r\n                    <p className={`${styles.order__digitdecor} text text_type_digits-large`}>{orderInfo.order.number}</p>\r\n                </div>\r\n                <p className=\"text text_type_main-medium\">Идентификатор заказа</p>\r\n                <img className={`${styles.order__img} mb-15 mt-15`}\r\n                    alt=\"заказ принят\"\r\n                    src={check}\r\n                />\r\n                <p className=\"text text_type_main-default\">Ваш заказ начали готовить</p>\r\n                <div className=\"mt-2\">\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Дождитесь готовности на орбитальной станции\r\n                    </p>\r\n                </div>\r\n            </div>)}\r\n\r\n            {!isLoading && data && (\r\n                <>\r\n                    <Container id={id} />\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Container: FunctionComponent<{ id: string }> = ({ id }) => {\r\n    const all = useSelector((state) => state.apiList.burgerData);\r\n    const modal = useSelector((state) => state.modalInfo.detailOrderInfo);\r\n    const allOrders = useSelector((state) => state.modalInfo.data);\r\n    const [order] = allOrders!.orders.filter((elem: any) => elem._id == id);\r\n\r\n\r\n    if (order) {\r\n        const { right, totalCost } = countCostOrder(all, order.ingredients);\r\n\r\n        return (\r\n            <div className={styles.orderDetailModal}>\r\n                {!modal && (\r\n                    <span\r\n                        className={styles.detailOrderInfoHeader +\r\n                            \"text text_type_digits-default mb-10\"\r\n                        }\r\n                    >{`#${order.number}`}</span>\r\n                )}\r\n                <span className={\"text text_type_main-medium mb-3\"}>\r\n                    {order.name}\r\n                </span>\r\n                <div className={\"text text_type_main-default mb-15\"}>\r\n                    {order.status === \"done\" ? (\r\n                        <span className={styles.doneStatus + \"mb-2\"}>\r\n                            {\"Выполнен\"}\r\n                        </span>\r\n                    ) : (\r\n                        <span>{\"not\"}</span>\r\n                    )}\r\n                </div>\r\n\r\n                <span className={\"text text_type_main-medium mb-6\"}>\r\n                    {\"Состав\"}\r\n                </span>\r\n                <div className={\"mb-10\"}>\r\n                    <Ingredients total={right} />\r\n                </div>\r\n                <div className={styles.orderInfoTotal}>\r\n                    {\" \"}\r\n                    <span\r\n                        className={\r\n                            \"text text_type_main-default text_color_inactive\"\r\n                        }\r\n                    >\r\n                        {countDate(order.createdAt).join(\" \")}\r\n                    </span>\r\n                    <div className={styles.orderInfoTotalCost}>\r\n                        <span className={\"text text_type_digits-default mr-2\"}>\r\n                            {totalCost}\r\n                        </span>\r\n                        <CurrencyIcon type={'primary'} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else return null\r\n}\r\n\r\nconst Ingredients: FunctionComponent<{ total: Array<newObj> | null }> = ({ total }) => {\r\n    const noDuplicate = Array.from(new Set(total))\r\n\r\n    noDuplicate.map((elem) => {\r\n        elem.count = total!.filter((el) => el === elem).length;\r\n        if (elem.type === \"bun\") {\r\n            elem.count = 2;\r\n        }\r\n    });\r\n\r\n    return (\r\n\r\n        <div className={styles.ingredientScroll}>\r\n            {noDuplicate.map((elem, i) => {\r\n                return (\r\n                    <div className={styles.infoEat} key={`${elem._id}${i}`}>\r\n                        <div\r\n                            className={styles.scrollInside + \"mb-4\"}\r\n\r\n                        >\r\n                            {/* */}\r\n                            <div className={styles.imageAndNameOrder}>\r\n                                <div className={styles.orderImage}>\r\n                                    <img src={elem.image_mobile} alt={elem.name} />\r\n                                </div>\r\n                                <span\r\n                                    className={\r\n                                        \"text text_type_main-default m-4\"\r\n                                    }\r\n                                >\r\n                                    {elem.name}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.priceOrderInfo}>\r\n                            <span\r\n                                className={\"text text_type_digits-default mr-2\"}\r\n                            >{`${elem.count} x ${elem.price}`}</span>\r\n                            <CurrencyIcon type={'primary'} />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import styles from \"./ingredient-details.module.css\";\r\n//import { useSelector } from 'react-redux';\r\nimport { useSelector } from '../../services/hooks';\r\n//import { RootState } from '../../services/reducers/index';\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\ntype QuizParams = {\r\n    id: string;\r\n};\r\n\r\n\r\nconst Detail: FunctionComponent<{ type: string, content: number | null }> = ({ type, content }) => {\r\n\r\n    return (\r\n\r\n        <div className={`${styles.ingredient__element} mr-5`}>\r\n            <p className=\"text text_type_main-default\">\r\n                {type}\r\n            </p>\r\n            <p className=\"text text_type_digits-default\">\r\n                {content}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction IngredientDetails() {\r\n    const { id } = useParams<QuizParams>();\r\n    const foodList = useSelector((state) => state.apiList.burgerData);\r\n    const exact: any = foodList!.find((elem: { _id: string }) => elem._id === id);\r\n    const location = useLocation();\r\n\r\n\r\n    if (exact)\r\n\r\n        return (\r\n            <div className={`${styles.ingredient__container} p-10`}>\r\n\r\n\r\n                <p className={'text text_type_main-large'}>\r\n                    Детали ингредиента\r\n                </p>\r\n\r\n                <img className={`${styles.ingredient__img}`}\r\n                    src={exact?.image_large}\r\n                    alt={exact?.name}\r\n                />\r\n\r\n                <p className=\"text text_type_main-medium\">\r\n                    {exact?.name}\r\n                </p>\r\n\r\n\r\n                <div className={`${styles.ingredient__info} mt-8 text_color_inactive`}>\r\n                    <Detail type=\"Калории, ккал\" content={exact?.calories} />\r\n                    <Detail type=\"Белки, г\" content={exact?.proteins} />\r\n                    <Detail type=\"Жиры, г\" content={exact?.fat} />\r\n                    <Detail type=\"Углеводы, г\" content={exact?.carbohydrates} />\r\n                </div>\r\n            </div>\r\n        );\r\n    else return null\r\n}\r\n\r\nexport default IngredientDetails;","import styles from './modal-overlay.module.css';\r\nimport { FunctionComponent } from \"react\";\r\n\r\nconst ModalOverlay: FunctionComponent<{ closeClick: any }> = ({ closeClick }) => {\r\n    return (\r\n        <div className={styles.overlay} onClick={closeClick}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalOverlay;\r\n\r\n\r\n","import { createPortal } from \"react-dom\";\r\nimport styles from './modal.module.css';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { closeModal } from \"../../services/actions\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\")!;\r\n\r\nconst Modal: FunctionComponent<{ children: React.ReactNode, header?: React.ReactNode }> = ({ children, header }) => {\r\n    const location = useLocation<{ background: { pathname: string } }>()\r\n    const { url } = useRouteMatch();\r\n    const history = useHistory();\r\n    const closePopup = () => {\r\n        dispatch(closeModal());\r\n        history.replace({ pathname: location.state ? `${location.state.background.pathname}` : `${url}` });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const { allClose } = useSelector((state) => state.modalInfo)\r\n    const escapeClosed = useCallback((e) => {\r\n        if (e.key === \"Escape\") {\r\n            closePopup();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", escapeClosed);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", escapeClosed);\r\n        };\r\n    }, []);\r\n\r\n    if (allClose) {\r\n        return null;\r\n    }\r\n\r\n\r\n    return createPortal(\r\n\r\n        <>\r\n            <ModalOverlay closeClick={() => closePopup()} />\r\n\r\n            <div className={styles.modal__space}>\r\n                {header}\r\n                <div className={styles.modal__close_icon} onClick={() => closePopup()}>\r\n                </div>\r\n                <div className={styles.modalBody}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n\r\n        </>,\r\n        modalRoot\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Modal;\r\n","import { useDrag, useDrop } from \"react-dnd\";\r\nimport burgerConstructorStyles from './burger-constructor.module.css';\r\nimport { FunctionComponent } from \"react\";\r\n\r\n//компоненты от яндекса\r\nimport {\r\n    ConstructorElement,\r\n    DragIcon,\r\n    CurrencyIcon,\r\n    Button\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n//\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport {\r\n    openModalOrder,\r\n    count,\r\n    switchCard,\r\n    deleteCard,\r\n    countPrice,\r\n    addCard,\r\n    cleanCounter,\r\n} from \"../../services/actions/index\";\r\nimport { itemTypes } from \"../../services/actions/index\";\r\nimport { TIngredient } from '../../services/types/types';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Ingredients() {\r\n    const mainIngredients = useSelector(\r\n        (state) => state.constructorList.mainIngredients\r\n    );\r\n    /*******любимое место с ключом */\r\n\r\n    const setIngr = mainIngredients.map((elem: TIngredient, i: number) => (<Ingredient\r\n        key={elem.keyAdd}\r\n        className={burgerConstructorStyles.burger_constructor__draggable_list}\r\n        elemKey={elem}\r\n        id={elem._id}\r\n        name={elem.name}\r\n        price={elem.price}\r\n        image={elem.image_mobile}\r\n        index={i}\r\n    />))\r\n\r\n    return (\r\n        <>\r\n            {setIngr}\r\n        </>\r\n    );\r\n}\r\n\r\nconst Ingredient: FunctionComponent<{ className: any, id: string, name: string, price: number, image: string, index: number, elemKey: TIngredient }> = ({ id, name, price, image, index, elemKey }) => {\r\n    const dispatch = useDispatch();\r\n    const totalCard = useSelector((state) => state.apiList);\r\n    const { mainIngredients, bun } = useSelector(\r\n        (state) => state.constructorList\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(count(mainIngredients, elemKey, totalCard));\r\n    }, [mainIngredients, bun, addCard, count, elemKey]);\r\n    /*\r\n  useEffect(() => {\r\n      dispatch(count(mainIngredients, elemKey, totalCard));\r\n  }, [mainIngredients, bun, deleteCard, switchCard]);\r\n*/\r\n\r\n    useEffect(() => {\r\n    }, [totalCard, deleteCard]);\r\n\r\n    const ref = useRef<HTMLInputElement>(null);\r\n    const [, dropRef] = useDrop({\r\n        accept: itemTypes.constructor,\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n        hover: (item: { index: number }, monitor) => {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY =\r\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset: any = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            dispatch(switchCard(dragIndex, hoverIndex, mainIngredients));\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [{ isDragging }, dragRef] = useDrag({\r\n        type: itemTypes.constructor,\r\n        item: () => {\r\n            return { id, index, elemKey };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n    dragRef(dropRef(ref));\r\n\r\n    return (\r\n        <div\r\n            className={burgerConstructorStyles.burger_constructor__draggable_list_item}\r\n            ref={ref}\r\n            style={{ opacity }}\r\n        >\r\n            <DragIcon type=\"primary\" />\r\n            <ConstructorElement\r\n                text={name}\r\n                price={price}\r\n                thumbnail={image}\r\n                handleClose={() => {\r\n                    dispatch(deleteCard(mainIngredients, elemKey, totalCard));\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function BurgerConstructor() {\r\n    const history = useHistory();\r\n    const { logged } = useSelector(state => state.userInfo);\r\n    const { mainIngredients, bun } = useSelector(\r\n        (state) => state.constructorList\r\n    );\r\n    const dispatch = useDispatch();\r\n    const [, dropIngredient] = useDrop({\r\n        accept: itemTypes.ingredient,\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n        drop(item) {\r\n            dispatch(addCard(item, mainIngredients, bun));\r\n        },\r\n    });\r\n\r\n    const total = useSelector((state) => state.apiList.burgerData)\r\n\r\n    useEffect(() => {\r\n        if (bun)\r\n            dispatch(countPrice(mainIngredients, bun));\r\n\r\n    }, [mainIngredients, bun]);\r\n\r\n    const totalPrice = useSelector((state) => state.price.totalPrice);\r\n    let infoToSend: null | Array<string> = null\r\n    if (bun) {\r\n        bun.type ? infoToSend = mainIngredients\r\n            .map((elem: { _id: string }) => elem._id)\r\n            .concat(bun._id, bun._id) : infoToSend = null\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ul className={burgerConstructorStyles.burger_constructor__main_list} ref={dropIngredient} >\r\n\r\n                {/* верх бургера (заблочен для сдвига) */}\r\n                {bun &&\r\n                    <li className={burgerConstructorStyles.burger_constructor__main_list_item} key={bun.keyAdd}>\r\n                        <ConstructorElement\r\n                            type='top'\r\n                            isLocked={true}\r\n                            text={bun.name + ' (верх)'}\r\n                            thumbnail={bun.image}\r\n                            price={bun.price}\r\n                        />\r\n                    </li>\r\n                }\r\n\r\n\r\n                {/*пока нет ингредиентов*/}\r\n                {!bun && mainIngredients.length === 0 &&\r\n                    <div >\r\n                        <p className={burgerConstructorStyles.burger_constructor__noingr_space + 'text text_type_main-medium'}>\r\n                            Сначала добавьте ингридиенты\r\n                        </p>\r\n                        <div className={burgerConstructorStyles.burger_constructor__noingr}></div>\r\n                    </div>\r\n                }\r\n\r\n                {/*то, что со скроллом*/}\r\n\r\n                {mainIngredients.length === 0 && bun &&\r\n                    <div className={burgerConstructorStyles.burger_constructor__noingr_space_other}>\r\n                        <p className='text text_type_main-medium'>\r\n                            <span className='text_color_inactive'>\r\n                                Нельзя приготовить омлет, не разбив нескольких яиц,\r\n                                а бургер, не добавив\r\n                            </span> ингредиентов\r\n                            <span className='text text_type_main-small text_color_inactive'>.\r\n                                <br />\r\n                                &copy; Амар Хаям и другие замечательные философы\r\n                            </span>\r\n                        </p>\r\n                    </div>}\r\n\r\n\r\n                {/************************************************************************************** */}\r\n                <li className={burgerConstructorStyles.burger_constructor__draggable_list} >\r\n                    {mainIngredients.length > 0 && <Ingredients />}\r\n                </li>\r\n                {/************************************************************************************** */}\r\n\r\n                {/* низ бургера (заблочен для сдвига) */}\r\n                {bun &&\r\n                    <li className={burgerConstructorStyles.burger_constructor__main_list_item} key=\"bottom_bun\">\r\n                        <ConstructorElement\r\n                            isLocked={true}\r\n                            type='bottom'\r\n                            text={bun.name + ' (низ)'}\r\n                            thumbnail={bun.image}\r\n                            price={bun.price}\r\n                        />\r\n                    </li>\r\n                }\r\n            </ul>\r\n\r\n            {/* итог заказа */}\r\n            <div className={burgerConstructorStyles.burger_constructor__order_details}>\r\n                <p className=\"text text_type_digits-medium\">\r\n                    {totalPrice}\r\n                </p>\r\n                <span className='ml-2 mr-10'>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </span>\r\n                {!bun && <Button type=\"primary\"\r\n                    size=\"medium\">Добавьте булки!</Button>}\r\n                {bun &&\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size=\"medium\"\r\n                        onClick={() => {\r\n                            if (logged) {\r\n                                dispatch(openModalOrder(infoToSend), cleanCounter(total))\r\n                            }\r\n                            else history.replace({ pathname: '/login' })\r\n                        }}>\r\n                        Оформить заказ\r\n                    </Button>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import burgerIngredientsCardStyles from './burger-ingredients-card.module.css';\r\n// компоненты от яндекса\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { FunctionComponent } from \"react\";\r\n\r\n//\r\n//import { useDispatch } from \"react-redux\";\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { useDrag } from 'react-dnd';\r\nimport { itemTypes } from \"../../services/actions/index\";\r\nimport { currentIngredient } from \"../../services/actions/index\";\r\nimport { useSelector } from '../../services/hooks';\r\nimport { IIngredientElem } from '../../services/types/types';\r\n\r\n\r\nconst BurgerIngredientsCard: FunctionComponent<{ index: number, elem: IIngredientElem }> = ({ index, elem }) => {\r\n    const info = useSelector((state) => state.constructorList);\r\n\r\n    const count = () => {\r\n        const allElements = info.bun\r\n            ? info.mainIngredients.concat(info.bun, info.bun)\r\n            : info.mainIngredients;\r\n        return allElements.filter((el: any) => el._id === elem._id).length;\r\n    };\r\n    const dispatch = useDispatch();\r\n    const [{ isDragging }, dragRef] = useDrag({\r\n        type: itemTypes.ingredient,\r\n        item: {\r\n            item: elem,\r\n            index: index\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging() ? 0.4 : 1,\r\n        })\r\n    })\r\n\r\n    return (\r\n        <li\r\n            className={burgerIngredientsCardStyles.burgeringredients_card}\r\n            ref={dragRef} id={elem._id}\r\n            onClick={() => dispatch(currentIngredient(elem))}\r\n        >\r\n            {/*подсчет сколько взято*/}\r\n            {elem.counter > 0 && <Counter count={count()} size='default' />}\r\n\r\n            {/*elem.counter > 0 && <Counter count={elem.counter} size=\"default\" />*/}\r\n\r\n            {/*визуалка*/}\r\n            <img src={elem.image} alt={elem.name} title={elem.name} className=\"ml-4 mr-4\" />\r\n            {/*цена*/}\r\n            <div className={burgerIngredientsCardStyles.burgeringredients_card__ingredient_price}>\r\n                <p className='pr-2 text text_type_digits-default'>{elem.price}</p>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            {/*название*/}\r\n            <p className={burgerIngredientsCardStyles.burgeringredients_card__ingredient_name + ' text text_type_main-default'}>\r\n                {elem.name}\r\n            </p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default BurgerIngredientsCard;","import burgerIngredientsCategoryStyles from './burger-ingredients-category.module.css';\r\n// компонент\r\nimport BurgerIngredientsCard from '../burger-ingredients-card/burger-ingredients-card';\r\nimport { FunctionComponent } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\n//import { useSelector } from \"react-redux\";\r\nimport { TIngredient } from '../../services/types/types';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n//import { RootState } from '../../services/reducers/index';\r\n\r\n\r\n/************************************************************* */\r\n\r\nconst Cards: FunctionComponent<{ type: string }> = ({ type }) => {\r\n    const location = useLocation();\r\n    const info: any = useSelector((state) => state.apiList.burgerData);\r\n    return (\r\n        <ul className={burgerIngredientsCategoryStyles.burger_ingredients_list +\r\n            ' ml-4 mt-6 mr-2 mb-10'}>\r\n            {info?.map((elem: TIngredient, i: number) => {\r\n\r\n                if (elem.type === type) {\r\n                    return (\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/ingredients/${elem._id}`,\r\n                                state: { background: location },\r\n                            }}\r\n                            key={elem._id} className={burgerIngredientsCategoryStyles.link}>\r\n\r\n                            <BurgerIngredientsCard\r\n                                index={i}\r\n                                elem={elem}\r\n                                key={elem._id}></BurgerIngredientsCard>\r\n\r\n\r\n                        </Link>\r\n                    );\r\n                }\r\n            })}\r\n        </ul>\r\n    );\r\n\r\n}\r\n/************************************************************* */\r\n\r\nconst BurgerIngredientsCategory: FunctionComponent<{ textContent: string, cardType: string }> = ({ textContent, cardType }) => {\r\n    return (\r\n        <section id={cardType}>\r\n            <h2 className=\"text text_type_main-medium mt-10 mb-6\">\r\n                {textContent}\r\n            </h2>\r\n\r\n            <Cards type={cardType} />\r\n\r\n\r\n        </section>\r\n    );\r\n};\r\nexport default BurgerIngredientsCategory;\r\n\r\n","import burgerIngredientsStyles from './burger-ingredients.module.css';\r\n// компонент\r\nimport BurgerIngredientsCategory from '../burger-ingredients-category/burger-ingredients-category';\r\n// компонент от яндекса\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n//\r\n//import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { switchTab } from \"../../services/actions\";\r\nimport { useRef, useEffect } from \"react\";\r\n//import { RootState } from '../../services/reducers/index';\r\n\r\n\r\nfunction MainTab() {\r\n    const dispatch = useDispatch();\r\n    const current = useSelector((state) => state.tabSwtich.currentTab);\r\n\r\n    const toSwitchTab = (e: string) => {\r\n        dispatch(switchTab(e));\r\n        const element = document.getElementById(e);\r\n        if (element) {\r\n            element.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={burgerIngredientsStyles.burgeringredients__tab_selector}>\r\n            <Tab\r\n                value=\"bun\"\r\n                active={current === \"bun\"}\r\n                onClick={(e) => toSwitchTab(e)}\r\n            >\r\n                Булки\r\n            </Tab>\r\n            <Tab\r\n                value=\"sauce\"\r\n                active={current === \"sauce\"}\r\n                onClick={(e) => toSwitchTab(e)}\r\n            >\r\n                Соусы\r\n            </Tab>\r\n            <Tab\r\n                value=\"main\"\r\n                active={current === \"main\"}\r\n                onClick={(e) => toSwitchTab(e)}\r\n            >\r\n                Начинки\r\n            </Tab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function BurgerIngredients() {\r\n    const dispatch = useDispatch();\r\n    const scrollRef: any = useRef(null);\r\n    const ingredientsScroll = (e: any) => {\r\n        const bun = e.target.childNodes[0].offsetHeight;\r\n        const sauce = e.target.childNodes[1].clientHeight;\r\n\r\n        if (scrollRef.current.scrollTop < bun) {\r\n            dispatch(switchTab(\"bun\"));\r\n        }\r\n        if (\r\n            scrollRef.current.scrollTop >= bun &&\r\n            scrollRef.current.scrollTop < bun + sauce\r\n        ) {\r\n            dispatch(switchTab(\"sauce\"));\r\n        }\r\n        if (scrollRef.current.scrollTop >= bun + sauce) {\r\n            dispatch(switchTab(\"main\"));\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (scrollRef && scrollRef.current) {\r\n            scrollRef.current.addEventListener(\"scroll\", (e: any) => {\r\n                ingredientsScroll(e);\r\n            });\r\n        }\r\n        return () => {\r\n            if (scrollRef && scrollRef.current) {\r\n                scrollRef.current.removeEventListener(\"scroll\", (e: any) => {\r\n                    ingredientsScroll(e);\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text text_type_main-large mt-10\">\r\n                Соберите бургер\r\n            </h1>\r\n            {/*переключалка между ингридиентами*/}\r\n            <MainTab />\r\n\r\n            {/*список ингридиентов простыней*/}\r\n            <div className={burgerIngredientsStyles.burgeringredients__scroll_container} ref={scrollRef}>\r\n                <BurgerIngredientsCategory textContent=\"Булки\"\r\n                    cardType=\"bun\" />\r\n                <BurgerIngredientsCategory textContent=\"Соусы\"\r\n                    cardType=\"sauce\" />\r\n                <BurgerIngredientsCategory textContent=\"Начинки\"\r\n                    cardType=\"main\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\nimport Modal from '../components/modal/modal';\r\nimport IngredientDetails from \"../components/ingredient-details/ingredient-details\";\r\nimport OrderDetails from '../components/order-details/order-details';\r\nimport { useSelector } from '../services/hooks'\r\nimport appStyles from '../components/app/app.module.css';\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\n\r\nfunction MainPage() {\r\n\r\n    const { orderModal } =\r\n        useSelector((state) => state.modalInfo);\r\n\r\n    return (\r\n        <main className={appStyles.container}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <section className={appStyles.container_left + ' mr-5'}>\r\n                    <BurgerIngredients />\r\n                </section>\r\n\r\n                <section className={appStyles.container_right + ' ml-5'}>\r\n                    <BurgerConstructor />\r\n                </section>\r\n            </DndProvider>\r\n\r\n\r\n            {/*IngredientDetails && <Modal children={<IngredientDetails />} />*/}\r\n            {orderModal && <Modal children={<OrderDetails />} />}\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React, { FunctionComponent } from \"react\";\r\nimport errorStyles from './errorStyles.module.css';\r\n\r\nconst ErrorAnons: FunctionComponent<{ error: number | string | null }> = ({ error }) => {\r\n    return (\r\n        <div className={' mt-10'} >\r\n            <span\r\n                className={errorStyles.box + \"text text_type_main-default\"}\r\n            >\r\n                Кажется, что-то не так {error}! :( Но вы обязательно справитесь.&nbsp;\r\n            </span>\r\n            <span\r\n                className={errorStyles.text + \"text text_type_main-default\"}\r\n            >\r\n                Проверьте правильность введенных данных.\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\nexport default ErrorAnons;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport loginStyles from \"./login.module.css\";\r\nimport { Button, Input, PasswordInput } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userLogin } from \"../services/actions/auth\";\r\nimport ErrorAnons from \"../components/error-anons/error-anons\";\r\n\r\nfunction Login() {\r\n    const { error, hasError, logged } = useSelector((state) => state.userInfo);\r\n    const dispatch = useDispatch();\r\n\r\n    const [passwordValue, setPasswordValue] = useState<string>('')\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n    const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.target.value)\r\n    }\r\n\r\n    const submit = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(userLogin(emailValue, passwordValue))\r\n    }\r\n\r\n    return (\r\n        <div className={loginStyles.mainbox}>\r\n            <span\r\n                className={\r\n                    loginStyles.header +\r\n                    \"text text_type_main-medium\"\r\n                }\r\n            >\r\n                Вход\r\n            </span>\r\n\r\n            <form onSubmit={submit}>\r\n                <div className={loginStyles.input}>\r\n                    <Input type={'text'}\r\n                        onChange={e => setEmailValue(e.target.value)}\r\n                        value={emailValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} placeholder={\"E-mail\"} />\r\n                </div>\r\n                <div className={loginStyles.input}>\r\n                    <PasswordInput\r\n                        onChange={onPasswordChange}\r\n                        value={passwordValue}\r\n                        name={'password'} />\r\n                </div>\r\n                <div>\r\n                    <div className={loginStyles.button}>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n\r\n            {hasError && <ErrorAnons error={error} />}\r\n            <div className={loginStyles.text}>\r\n                <span className={\"text text_type_main-default text_color_inactive\"}>\r\n                    Вы — новый пользователь?&nbsp;\r\n                </span>\r\n                <Link\r\n                    to={{ pathname: \"/register\" }}\r\n                    className={loginStyles.link}\r\n                >\r\n                    <span className=\"text text_type_main-default\">\r\n                        Зарегистрироваться\r\n                    </span>\r\n                </Link>\r\n            </div>\r\n            <div className={loginStyles.text}>\r\n                <span className={\"text text_type_main-default text_color_inactive\"}>\r\n                    Забыли пароль?&nbsp;\r\n                </span>\r\n                <Link\r\n                    to={{ pathname: \"/forgot-password\" }}\r\n                    className={loginStyles.link\r\n                    }\r\n                >\r\n                    <span className=\"text text_type_main-default\">\r\n                        Восстановить пароль\r\n                    </span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport registerStyles from \"./register.module.css\";\r\nimport { Button, Input, PasswordInput } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { userRegistration } from \"../services/actions/auth\";\r\nimport ErrorAnons from \"../components/error-anons/error-anons\";\r\n\r\nfunction Register() {\r\n    const { hasError, error, regInfo } = useSelector(\r\n        (state) => state.registration\r\n    );\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [passwordValue, setPasswordValue] = useState<string>('')\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n    const [nameValue, setnNameValue] = useState<string>('')\r\n    const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.target.value)\r\n    }\r\n    const registration = () => {\r\n        dispatch(userRegistration(emailValue, nameValue, passwordValue, history));\r\n    };\r\n\r\n    return (\r\n        <div className={registerStyles.mainbox}>\r\n            <span\r\n                className={registerStyles.header + \"text text_type_main-medium \"\r\n                }\r\n            >\r\n                Регистрация\r\n            </span>\r\n            <form onSubmit={registration}>\r\n                <div className={registerStyles.input}>\r\n                    <Input type={'text'}\r\n                        placeholder={'Имя'}\r\n                        onChange={e => setnNameValue(e.target.value)}\r\n                        value={nameValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                </div>\r\n                <div className={registerStyles.input}>\r\n                    <Input type={'text'}\r\n                        placeholder={'E-mail'}\r\n                        onChange={e => setEmailValue(e.target.value)}\r\n                        value={emailValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                </div>\r\n                <div className={registerStyles.input}>\r\n                    <PasswordInput onChange={onPasswordChange} value={passwordValue} name={'password'} />\r\n                </div>\r\n                <div>\r\n                    <div className={registerStyles.button}>\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n\r\n                        {hasError && <ErrorAnons error={error} />}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className={registerStyles.text}>\r\n                <span className={\"text text_type_main-default text_color_inactive\"}>\r\n                    Уже зарегистрированы?&nbsp;\r\n                </span>\r\n                <Link\r\n                    to={{ pathname: \"/login\" }}\r\n                    className={registerStyles.link}\r\n                >\r\n                    <span className=\"text text_type_main-default\">\r\n                        Войти\r\n                    </span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Register;\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"../services/hooks\";\r\nimport forgotStyles from \"./forgotPassword.module.css\";\r\nimport { Button, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { sendForgotRequest } from \"../services/actions/auth\";\r\nimport ErrorAnons from \"../components/error-anons/error-anons\";\r\nimport { USER_FORGOT_FAILED } from '../services/actions/auth'\r\n\r\nfunction ForgotPassword() {\r\n    const { hasError, error } = useSelector((state) => state.forgotRequest);\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n\r\n    const validateEmail = (email: string) => {\r\n        var re = /\\S+@\\S+\\.\\S+/;\r\n        return re.test(email);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const resetPassword = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (validateEmail(emailValue)) {\r\n\r\n            dispatch(sendForgotRequest(emailValue, history));\r\n            history.replace({ pathname: \"/reset-password\" });\r\n        } else\r\n            dispatch({\r\n                type: USER_FORGOT_FAILED,\r\n                value: \"Введен некорректный email\",\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={forgotStyles.mainbox}>\r\n            <span\r\n                className={\"text text_type_main-medium mb-6\"}\r\n            >\r\n                Восстановление пароля\r\n            </span>\r\n            <form onSubmit={resetPassword}>\r\n                <div className={\"mb-6\"}>\r\n                    <Input type={'text'}\r\n                        placeholder={'E-mail'}\r\n                        onChange={e => setEmailValue(e.target.value)}\r\n                        value={emailValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                </div>\r\n                <div>\r\n                    <div className={forgotStyles.button}>\r\n\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Восстановить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {hasError ? <ErrorAnons error={error} /> : null}\r\n            <div>\r\n                <span\r\n                    className={\r\n                        \"text text_type_main-default text_color_inactive\"\r\n                    }\r\n                >\r\n                    Вспомнили пароль?&nbsp;\r\n                </span>\r\n                <Link\r\n                    className={\r\n                        forgotStyles.link\r\n                    }\r\n                    to={{ pathname: \"/login\" }}\r\n                >\r\n\r\n                    <span className=\"text text_type_main-default\">Войти</span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks'\r\nimport resetStyles from \"./resetPassword.module.css\";\r\nimport { Button, PasswordInput, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { resetPassword } from \"../services/actions/auth\";\r\nimport ErrorAnons from \"../components/error-anons/error-anons\";\r\n\r\nfunction ResetPassword() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { hasError, error } = useSelector((state) => state.forgotRequest);\r\n    const [passwordValue, setPasswordValue] = useState<string>('')\r\n\r\n    const passwordOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.target.value)\r\n    }\r\n    const [codeValue, setCodeValue] = useState<string>('')\r\n    const reset = (e: React.SyntheticEvent) => {\r\n        e.preventDefault()\r\n        dispatch(resetPassword(passwordValue, codeValue, history))\r\n    };\r\n\r\n    return (\r\n        <div className={resetStyles.mainbox}>\r\n            <span\r\n                className={resetStyles.header +\r\n                    \"text text_type_main-medium\"}\r\n            >\r\n                Восстановление пароля\r\n            </span>\r\n            <form onSubmit={reset}>\r\n                <div className={resetStyles.input}>\r\n                    <PasswordInput onChange={passwordOnChange} value={passwordValue} name={'password'} />\r\n                </div>\r\n                <div className={resetStyles.input}>\r\n                    <Input type={'text'}\r\n                        placeholder={'Введите код из письма'}\r\n                        onChange={e => setCodeValue(e.target.value)}\r\n                        value={codeValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                </div>\r\n                <div>\r\n                    <div className={resetStyles.button}>\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Сохранить\r\n                        </Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {hasError && <ErrorAnons error={error} />}\r\n            <div>\r\n                <span\r\n                    className={\"text text_type_main-default text_color_inactive\"}\r\n                >\r\n                    Вспомнили пароль?&nbsp;\r\n                </span>\r\n                <Link\r\n                    className={resetStyles.link}\r\n                    to={{ pathname: \"/login\" }}\r\n                >\r\n                    <span className=\"text text_type_main-default\">Войти</span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","import React, { FunctionComponent } from \"react\";\r\nimport { useDispatch, useSelector } from '../../services/hooks'\r\nimport OrderCardStyles from \"./OrderCardStyles.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {\r\n    countDate,\r\n    currentOrder,\r\n    countCostOrder,\r\n} from \"../../services/actions/index\";\r\nimport {\r\n    useRouteMatch,\r\n    Link,\r\n    useLocation,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction OrderCards() {\r\n    const location = useLocation();\r\n    const { url } = useRouteMatch();\r\n\r\n    const orders = useSelector(\r\n        (state) => state.webSocketAll.data?.orders\r\n    );\r\n    if (orders)\r\n        return (\r\n            <div>\r\n                {orders.map((elem: any) => {\r\n\r\n                    return (\r\n                        <Link\r\n                            key={elem._id}\r\n                            to={{\r\n                                pathname: `${url}/${elem._id}`,\r\n                                state: { background: location },\r\n                            }\r\n                            }\r\n                            className={OrderCardStyles.link}\r\n                        >\r\n\r\n                            <OrderCard elem={elem} key={elem._id} />\r\n\r\n                        </Link>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    else return null\r\n}\r\n\r\nconst OrderCard: FunctionComponent<{ elem: any }> = ({ elem }) => {\r\n    const dispatch = useDispatch();\r\n    const { createdAt, ingredients, name, number } = elem;\r\n    const all = useSelector((state) => state.apiList.burgerData);\r\n    const { path } = useRouteMatch();\r\n\r\n    const status = path === \"/profile/orders\" ? elem.status : \"\";\r\n    const shownStatus = status === 'done' ? 'Выполнен' : status === 'pending' ? 'Готовится' : status === 'created' ? 'Создан' : ''\r\n    const { right, totalCost } = countCostOrder(all, ingredients);\r\n    const visibleIconsCount = 6;\r\n    const hiddenIconsCount = right!.length - visibleIconsCount + 1;\r\n\r\n    const statusStyle = status === 'done' ? OrderCardStyles.done : ''\r\n    const getDetailOrder = () => {\r\n        dispatch(currentOrder(elem));\r\n    };\r\n\r\n    return (\r\n        <div className={OrderCardStyles.mainConteiner}>\r\n            <div className={OrderCardStyles.itemConteiner}>\r\n                <div\r\n                    className={\"mb-4 p-6\"}\r\n                    onClick={() => getDetailOrder()}\r\n                >\r\n                    <div className={OrderCardStyles.mainInfoLine}>\r\n                        <div className={OrderCardStyles.mainInfo}>\r\n                            <span className={\"text text_type_digits-default\"} >\r\n                                {\"#\" + `${number}`}\r\n                            </span>\r\n                        </div>\r\n                        <div className={OrderCardStyles.mainInfo}>\r\n                            <span className={\"text text_type_main-default text_color_inactive\"} >\r\n                                {countDate(createdAt).join(\" \")}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    {/******* */}\r\n                    <div className={OrderCardStyles.content}>\r\n                        <span\r\n                            className={\r\n                                OrderCardStyles.name +\r\n                                \"text text_type_main-medium mb-2\"\r\n                            }\r\n                        >\r\n                            {name}\r\n                        </span>\r\n\r\n                        <div className={OrderCardStyles.orderDetail}>\r\n                            <div className={OrderCardStyles.ingredients}>\r\n                                {right!.map((elem, i) => {\r\n                                    let key = `${elem._id}${i}${number}`;\r\n                                    if (i <= 4) {\r\n                                        return (\r\n                                            <div className={OrderCardStyles.image} key={key}>\r\n                                                <img src={elem.image_mobile} alt={elem.name} />\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n\r\n                                    if (i === 5) {\r\n                                        return (\r\n                                            <div className={OrderCardStyles.lastImagespace} key={key}>\r\n                                                <div className={OrderCardStyles.lastImage}>\r\n                                                    <img src={elem.image_mobile} alt={elem.name} />\r\n                                                </div>\r\n                                                <div className={OrderCardStyles.plus}>\r\n                                                    <span className={\"text text_type_digits-default\"}>{`+${hiddenIconsCount}`}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                })}\r\n\r\n                            </div>\r\n\r\n                            <div\r\n                                className={\r\n                                    OrderCardStyles.price\r\n\r\n                                }\r\n                            >\r\n                                <span className={\"text text_type_digits-default\"}>{totalCost}</span>\r\n                                <CurrencyIcon type=\"primary\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default OrderCards;","import spinerStyles from \"./Spiner.module.css\";\r\nimport React from \"react\";\r\n\r\nfunction Spiner() {\r\n    return (\r\n        <div className={spinerStyles.spiner}></div>\r\n    )\r\n}\r\n\r\nexport default Spiner;","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from '../services/hooks'\r\nimport profileStyles from \"./profile.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n    profileChange,\r\n    logOut,\r\n    refreshToken\r\n} from \"../services/actions/auth\";\r\nimport { getCookie } from \"../services/actions/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, PasswordInput, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ErrorAnons from \"../components/error-anons/error-anons\";\r\nimport { useRouteMatch, useLocation, Route } from \"react-router-dom\";\r\nimport OrderDetails from \"../components/order-details/order-details\";\r\nimport OrderCards from \"../components/order-cards/order-cards\";\r\nimport { IUserInfo } from '../services/types/types'\r\nimport { Location } from 'history/index'\r\nimport Spiner from \"../components/spiner/spiner\";\r\n\r\ntype TPath = {\r\n    pathname: string\r\n} & Location\r\n\r\nfunction Profile() {\r\n    const { path } = useRouteMatch();\r\n    return (\r\n        <div className={profileStyles.box}>\r\n            <Route path={`${path}`} component={ProfileMain} />\r\n            <Route path={`${path}/orders/:id`} component={OrderDetails} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ProfileMain() {\r\n\r\n    const location = useLocation<{ background: TPath }>();\r\n    const isLoading = useSelector((state) => state.webSocketAll.isLoading);\r\n    const data = useSelector((state) => state.webSocketAll.data);\r\n    const { userInfo }: IUserInfo = useSelector(\r\n        (state) => state.userInfo\r\n    );\r\n    const [passwordValue, setPasswordValue] = useState<string>('')\r\n    const [emailValue, setEmailValue] = useState<string>(userInfo.user.email)\r\n    const [nameValue, setNameValue] = useState<string>(userInfo.user.name)\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const changeInfo = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(profileChange(emailValue, passwordValue, nameValue));\r\n    };\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'WS_CONNECTION_START',\r\n            value: `wss://norma.nomoreparties.space/orders?token=${getCookie(\r\n                'accessToken',\r\n            )}`,\r\n            place: true,\r\n        });\r\n        return () => {\r\n            dispatch({\r\n                type: 'WS_CONNECTION_TO_CLOSE',\r\n            });\r\n        };\r\n    }, []);\r\n\r\n    const profileText =\r\n        \"В этом разделе вы можете изменить свои персональные данные\";\r\n    const orderListText =\r\n        \"В этом разделе вы можете просмотреть свою историю заказов\";\r\n\r\n\r\n    return (\r\n        <div className={profileStyles.mainbox}>\r\n            <div className={profileStyles.navigation}>\r\n                <div className={profileStyles.navDiv}>\r\n\r\n                    <NavLink\r\n                        exact\r\n                        to={{ pathname: `/profile` }}\r\n                        className={profileStyles.noactivelink}\r\n                        activeClassName={profileStyles.activelink}\r\n                    >\r\n                        <span className=\"text text_type_main-medium\">Профиль</span>\r\n                    </NavLink>\r\n                    <NavLink\r\n                        to={{ pathname: `/profile/orders` }}\r\n                        className={profileStyles.noactivelink}\r\n                        activeClassName={profileStyles.activelink}\r\n                    >\r\n                        <span className=\"text text_type_main-medium\">История заказов</span>\r\n                    </NavLink>\r\n                    <button\r\n                        className={profileStyles.navButton}\r\n                        onClick={() => dispatch(logOut(history))}\r\n                    >\r\n                        <span className=\"text text_type_main-medium\" >Выход</span>\r\n                    </button>\r\n                    <span className={profileStyles.text}>\r\n                        <Promt>{location.pathname === '/profile' ? profileText : orderListText}</Promt>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={profileStyles.detailedorder}>\r\n                <Route exact path={`/profile`} component={ProfileInfo} />\r\n                <Route\r\n                    exact\r\n                    path={`/profile/orders`}\r\n                    component={!isLoading && data ? OrderHistory : Spiner}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nfunction ProfileInfo() {\r\n    const dispatch = useDispatch();\r\n    const { error, hasError, changeIsLoading } = useSelector(\r\n        (state) => state.userInfo\r\n    );\r\n    const { userInfo }: IUserInfo = useSelector(\r\n        (state) => state.userInfo\r\n    );\r\n\r\n\r\n    const [passwordValue, setPasswordValue] = useState<string>('')\r\n    const [emailValue, setEmailValue] = useState<string>(userInfo.user.email)\r\n    const [nameValue, setNameValue] = useState<string>(userInfo.user.name)\r\n\r\n    const passwordOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.target.value)\r\n    }\r\n\r\n    const changeInfo = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(profileChange(emailValue, passwordValue, nameValue));\r\n    };\r\n\r\n    const dontMatch = userInfo.user.email != emailValue || userInfo.user.name != nameValue;\r\n\r\n    return (\r\n        <>\r\n\r\n            <form onSubmit={changeInfo}>\r\n                <div className={\"mb-6\"}>\r\n                    <Input type={'text'}\r\n                        placeholder={'Имя'}\r\n                        onChange={e => setNameValue(e.target.value)}\r\n                        icon={'EditIcon'}\r\n                        value={nameValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'} />\r\n                </div>\r\n                <div className={\"mb-6\"}>\r\n                    <Input type={'text'}\r\n                        placeholder={'Логин'}\r\n                        onChange={e => setEmailValue(e.target.value)}\r\n                        icon={'EditIcon'}\r\n                        value={emailValue}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                </div>\r\n                <div className={\"mb-6\"}>\r\n                    <PasswordInput onChange={passwordOnChange} value={passwordValue} name={'password'} />\r\n                </div>\r\n                <div className={profileStyles.button}>\r\n                    {passwordValue.length > 0 && (\r\n\r\n                        <Button size={dontMatch ? \"small\" : \"medium\"}>\r\n                            Сохранить\r\n                        </Button>\r\n\r\n                    )}\r\n                </div>\r\n            </form>\r\n            {dontMatch && (\r\n                <div className={'mt-3'}>\r\n                    <Button\r\n                        size={passwordValue.length > 0 ? \"small\" : \"medium\"}\r\n                        onClick={() => {\r\n                            setPasswordValue('')\r\n                            setEmailValue(userInfo.user.email)\r\n                            setNameValue(userInfo.user.name)\r\n                        }}\r\n                    >\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n\r\n            )}\r\n\r\n            {hasError && <ErrorAnons error={error} />}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction OrderHistory() {\r\n    const dispatch = useDispatch()\r\n    // const { data } = useSelector((state) => state.webSocketAll);\r\n    const data = useSelector((state) => state.webSocketAll.data);\r\n    const token = getCookie(\"accessToken\")\r\n    /*\r\n            useEffect(() => {\r\n            if (data)\r\n                if (data.message) {\r\n                    if (data.message === 'Invalid or missing token') {\r\n                        refreshToken()\r\n                    }\r\n                }\r\n        }, [data, dispatch, token])\r\n    */\r\n    /*\r\n        useEffect(() => {\r\n            if (data)\r\n                if (data.message === 'Invalid or missing token')\r\n                    dispatch({\r\n                        type: \"WS_CONNECTION_START\",\r\n                        value: `wss://norma.nomoreparties.space/orders?token=${getCookie(\r\n                            \"accessToken\"\r\n                        )}`,\r\n                        place: true,\r\n                    });\r\n        }, [token])\r\n        */\r\n\r\n    if (data)\r\n        return (\r\n            <div className={profileStyles.orderHistoryBox}>\r\n\r\n                {data.orders && !data.message && (<OrderCards />)}\r\n            </div>\r\n        );\r\n    else return null\r\n}\r\n\r\n\r\n\r\nconst Promt: FunctionComponent<{ children: string }> = ({ children }) => {\r\n    return (\r\n        <span\r\n            className={\r\n                \"text text_type_main-default text_color_inactive mr-15\"\r\n            }\r\n        >\r\n            {children}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport page404Styles from \"./page404.module.css\";\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className={page404Styles.mainbox}>\r\n            <span\r\n                className={\"text text_type_digits-large mb-6\"}\r\n            >\r\n                Ошибка 404\r\n            </span>\r\n            <span\r\n                className={\"text text_type_main-large mb-20\"}\r\n            >\r\n            </span>\r\n            <span\r\n                className={\"text text_type_main-medium\"}\r\n            >\r\n                Извините, страница не найдена\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { useSelector } from '../../services/hooks'\r\nimport OrderNumbersStyles from \"./OrderNumbersStyles.module.css\";\r\n\r\n\r\nfunction OrderNumbers() {\r\n    const orders = useSelector((state) => state.webSocketAll.data?.orders)\r\n    const totalToday = useSelector(\r\n        (state) => state.webSocketAll.data?.totalToday)\r\n    const total = useSelector(\r\n        (state) => state.webSocketAll.data?.total\r\n    );\r\n\r\n    let doneOrders\r\n    let inWorkOrders\r\n    if (orders) {\r\n        doneOrders = orders.filter((elem: any) => elem.status === 'done').slice(0, 11)\r\n\r\n        inWorkOrders = orders.filter((elem: any) => elem.status === 'pending').slice(0, 11)\r\n    }\r\n    if (doneOrders && inWorkOrders)\r\n        return (\r\n            <div className={OrderNumbersStyles.main}>\r\n                <div className={OrderNumbersStyles.table}>\r\n                    <div className={OrderNumbersStyles.ready}>\r\n                        <div className={OrderNumbersStyles.readyHeader}>\r\n                            <span className={'text text_type_main-medium pb-6'}>\r\n                                Готовы:\r\n                            </span>\r\n                        </div>\r\n                        <div className={OrderNumbersStyles.readyNumbers}>\r\n                            <div className={'mr-9'}>\r\n                                {doneOrders.map((elem: any) => {\r\n                                    return (<span className={`mb-2 mr-1 text text_type_digits-default`} key={elem.number}>{elem.number}</span>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div >\r\n                        <div className={OrderNumbersStyles.inWorkTitle}>\r\n                            <p className={'text text_type_main-medium pb-6'}>\r\n                                В работе:\r\n                            </p>\r\n                        </div>\r\n                        <div className={OrderNumbersStyles.inWorkNumbers}>\r\n                            <div className={'mr-9'}>\r\n                                {inWorkOrders.map((elem: any) => {\r\n                                    return (<span className={`mb-2 mr-1 text text_type_digits-default`} key={elem.number}>{elem.number}</span>)\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    <span className={'text text_type_main-medium mt-15'}>Выполнено за все время:</span>\r\n                    <div className={OrderNumbersStyles.number}><p className={'text text_type_digits-large'}>{total}</p></div>\r\n                </div>\r\n                <div >\r\n                    <span className={'text text_type_main-medium mt-15'}>Выполнено за сегодня:</span>\r\n                    <span className={OrderNumbersStyles.number}><p className={'text text_type_digits-large'}>{totalToday}</p></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    else return null\r\n}\r\nexport default OrderNumbers","import { TWebsocketData } from '../types/types'\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = \"WS_CONNECTION_START\";\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = \"WS_CONNECTION_SUCCESS\";\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = \"WS_CONNECTION_ERROR\";\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = \"WS_CONNECTION_CLOSED\";\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = \"WS_GET_MESSAGE\";\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = \"WS_SEND_MESSAGE\";\r\nexport const WS_CONNECTION_TO_CLOSE: 'WS_CONNECTION_TO_CLOSE' = 'WS_CONNECTION_TO_CLOSE';\r\nexport const WS_CONNECTION_LOADING: 'WS_CONNECTION_LOADING' = 'WS_CONNECTION_LOADING';\r\n\r\nexport interface IWsConnectionStartAction {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    readonly value: string;\r\n    readonly place: boolean;\r\n}\r\n\r\nexport interface IWsConnectionSuccessAction {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n    readonly value: object;\r\n\r\n}\r\n\r\nexport interface IWsConnectionErrorAction {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n    readonly value: object;\r\n}\r\n\r\n\r\nexport interface IWsConnectionCloseAction {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n    readonly value: object;\r\n}\r\n\r\nexport interface IWsGetMessageAction {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    readonly value: TWebsocketData;\r\n}\r\n\r\nexport interface IWsSendMessageAction {\r\n    readonly type: typeof WS_SEND_MESSAGE;\r\n    readonly message: string;\r\n}\r\n\r\nexport interface IWsConnectionToCloseAction {\r\n    readonly type: typeof WS_CONNECTION_TO_CLOSE;\r\n}\r\n\r\nexport interface IWsConnectionLoadingAction {\r\n    readonly type: typeof WS_CONNECTION_LOADING;\r\n}\r\n\r\nexport type TWSActions =\r\n    IWsConnectionStartAction |\r\n    IWsConnectionSuccessAction |\r\n    IWsConnectionErrorAction |\r\n    IWsConnectionCloseAction |\r\n    IWsGetMessageAction |\r\n    IWsSendMessageAction |\r\n    IWsConnectionToCloseAction |\r\n    IWsConnectionLoadingAction;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../services/hooks\";\r\nimport feedStyles from \"./feedStyles.module.css\";\r\nimport Spiner from \"../components/spiner/spiner\";\r\nimport OrderCards from \"../components/order-cards/order-cards\";\r\nimport OrderNumbers from \"../components/order-numbers/order-numbers\";\r\nimport { WS_CONNECTION_START, WS_CONNECTION_TO_CLOSE } from '../services/actions/webSocket'\r\nfunction Feed() {\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.webSocketAll.data);\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: WS_CONNECTION_START,\r\n            value: \"wss://norma.nomoreparties.space/orders/all\",\r\n            place: false,\r\n        });\r\n        return () => {\r\n            dispatch({\r\n                type: WS_CONNECTION_TO_CLOSE,\r\n            });\r\n        };\r\n    }, []);\r\n    if (data) {\r\n        return (\r\n            <div >\r\n                {data.orders && (\r\n\r\n                    <div className={feedStyles.mainBox}>\r\n\r\n                        <div className={feedStyles.feedList}>\r\n                            <div className={feedStyles.headerText} >\r\n                                <span className={\"text text_type_main-large mt-10 mb-5\"}>\r\n                                    Лента заказов\r\n                                </span>\r\n                            </div>\r\n                            <div className={feedStyles.feed}>\r\n                                <OrderCards />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className={\"mt-25 ml-15\"} >\r\n                            <OrderNumbers />\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n                }\r\n\r\n                {!data.orders && !data.message && (<div className={'mt-30'}><Spiner /></div>)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else { return (<div className={'mt-30'}><Spiner /></div>) }\r\n}\r\n\r\nexport default Feed;","import { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst LoggedProtectedRoute: FunctionComponent<RouteProps> = ({ children, ...rest }) => {\r\n\r\n    const { logged } = useSelector((state) => state.userInfo);\r\n    const { state } = useLocation<{ from: { pathname: string } }>();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => (!logged ? children : <Redirect to={state ? state.from : '/'} />)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default LoggedProtectedRoute;","import { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from '../../services/hooks';\r\n\r\n\r\nconst LoggedProtectedResetRoute: FunctionComponent<RouteProps> = ({ children, ...rest }) => {\r\n    const { logged } = useSelector((state) => state.userInfo);\r\n    const { isLoading, sent } = useSelector((state) => state.forgotRequest);\r\n\r\n    return (\r\n        <>\r\n\r\n            {!isLoading && (\r\n                <Route\r\n                    {...rest}\r\n                    render={() => (!logged && sent ? children : <Redirect to=\"/\" />)}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoggedProtectedResetRoute;","import { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useSelector } from '../../services/hooks';\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nconst UnloggedProtectedRoute: FunctionComponent<RouteProps> = ({ children, ...rest }) => {\r\n    const { logged, isLoading, loadingUser, loadingRefresh } =\r\n        useSelector((state) => state.userInfo);\r\n\r\n    return (\r\n        <>\r\n\r\n            {!isLoading && !loadingUser && !loadingRefresh && (\r\n                <Route\r\n                    {...rest}\r\n                    render={({ location }) => (logged ? children : <Redirect to={{ pathname: '/login', state: { from: location } }} />)}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UnloggedProtectedRoute;","import React from \"react\";\r\n\r\n// компоненты\r\nimport AppHeader from '../app-header/app-header';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport Modal from '../modal/modal';\r\n\r\n/*********************/\r\nimport MainPage from \"../../pages/mainPage\";\r\nimport Login from \"../../pages/login\";\r\nimport Register from \"../../pages/register\";\r\nimport ForgotPassword from \"../../pages/forgotPassword\";\r\nimport ResetPassword from \"../../pages/resetPassword\";\r\nimport Profile from \"../../pages/profile\";\r\nimport NotFound from \"../../pages/page404\";\r\nimport Feed from \"../../pages/feed\";\r\nimport Spiner from \"../spiner/spiner\";\r\n/**************/\r\nimport LoggedProtectedRoute from \"../ProtectedRoute/LoggedProtectedRoute\";\r\nimport LoggedProtectedResetRoute from \"../ProtectedRoute/LoggedProtectedResetRoute\";\r\nimport UnloggedProtectedRoute from \"../ProtectedRoute/UnloggedProtectedRoute\";\r\n/*************/\r\n\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { getIngredients } from '../../services/actions/index'\r\n\r\n//\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    useHistory,\r\n    useLocation\r\n} from 'react-router-dom';\r\n\r\nimport { getUserRequest, getCookie } from \"../../services/actions/auth\";\r\n\r\nimport { Location } from 'history/index'\r\n\r\n\r\ntype TPath = {\r\n    pathname: string\r\n} & Location\r\n\r\n\r\n\r\nexport default function App() {\r\n    const location = useLocation<{ background: TPath }>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { hasError, error, isLoading, burgerData } = useSelector((state) => state.apiList);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getIngredients());\r\n\r\n        if (getCookie(\"accessToken\")) {\r\n            dispatch(getUserRequest());\r\n        }\r\n    }, []);\r\n\r\n    const currentOrderNumber = useSelector(\r\n        (state) => state.currentOrderDetail.number\r\n    );\r\n\r\n\r\n    const background =\r\n        history.action === 'PUSH' && location.state && location.state.background;\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Spiner />}\r\n            {hasError && \"Ошибка\" && <div>{error}</div>}\r\n            {!isLoading && !hasError && burgerData && (\r\n                <>\r\n                    <AppHeader />\r\n\r\n                    <Switch location={background || location}>\r\n\r\n                        <Route exact path=\"/\" component={MainPage} />\r\n                        <Route exact path=\"/feed\" component={Feed} />\r\n                        <LoggedProtectedRoute exact path=\"/login\">\r\n                            <Login />\r\n                        </LoggedProtectedRoute>\r\n                        <LoggedProtectedRoute exact path=\"/register\">\r\n                            <Register />\r\n                        </LoggedProtectedRoute>\r\n                        <LoggedProtectedRoute exact path=\"/forgot-password\">\r\n                            <ForgotPassword />\r\n                        </LoggedProtectedRoute>\r\n                        <LoggedProtectedResetRoute exact path=\"/reset-password\">\r\n                            <ResetPassword />\r\n                        </LoggedProtectedResetRoute>\r\n\r\n                        <UnloggedProtectedRoute path={`/profile`}>\r\n                            <Profile />\r\n                        </UnloggedProtectedRoute>\r\n                        <Route\r\n                            exact\r\n                            path={`/ingredients/:id`}\r\n                            component={IngredientDetails}\r\n                        />\r\n\r\n                        <Route exact path={`/feed/:id`} component={OrderDetails} />\r\n                        <Route>\r\n                            <NotFound />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n\r\n                    {background && (\r\n                        <Route\r\n                            path={`/ingredients/:id`}\r\n                            children={\r\n                                <Modal\r\n\r\n                                    children={<IngredientDetails />}\r\n\r\n                                />\r\n                            }\r\n                        ></Route>\r\n                    )}\r\n\r\n                    {background && (\r\n\r\n                        <Route\r\n                            path={`${background.pathname}/:id`}\r\n                            children={\r\n                                <Modal\r\n                                    header={\r\n                                        <span className={\"text text_type_digits-default  ml-10 mt-10 mb-10\"}>\r\n                                            {`#${currentOrderNumber}`}\r\n                                        </span>\r\n                                    }\r\n                                    children={<OrderDetails />}\r\n                                />\r\n                            }\r\n                        />\r\n                    )}\r\n\r\n                </>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_TO_CLOSE\r\n} from '../actions/webSocket'\r\nimport { TWSActions } from '../actions/webSocket'\r\nimport { TWebsocketData } from '../types/types'\r\n\r\ntype TinitialState = {\r\n    url: null | string;\r\n    connected: boolean;\r\n    data: TWebsocketData | null;\r\n    close: null | boolean;\r\n    error: null | object;\r\n    info: null | object;\r\n    isLoading: boolean;\r\n    inProfile: boolean;\r\n    closing: boolean;\r\n    message: null | string;\r\n}\r\n\r\nexport const initialState: TinitialState = {\r\n    url: null,\r\n    connected: false,\r\n    data: null,\r\n    close: null,\r\n    error: null,\r\n    info: null,\r\n    isLoading: false,\r\n    inProfile: false,\r\n    closing: false,\r\n    message: null,\r\n}\r\n\r\n\r\n\r\nexport const webSocketAll = (state = initialState, action: TWSActions): TinitialState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_START:\r\n            return {\r\n                ...state,\r\n                url: action.value,\r\n                inProfile: action.place,\r\n                isLoading: true,\r\n            }\r\n        case WS_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                connected: true,\r\n                info: action.value,\r\n                isLoading: false,\r\n            }\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            return {\r\n                ...state,\r\n                connected: false,\r\n                error: action.value,\r\n                isLoading: false\r\n            }\r\n        }\r\n        case WS_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                connected: false,\r\n                info: action.value,\r\n                closing: false\r\n            }\r\n        }\r\n        case WS_CONNECTION_TO_CLOSE: {\r\n            return {\r\n                ...state,\r\n                closing: true\r\n            }\r\n        }\r\n        case WS_GET_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                data: action.value\r\n            };\r\n        }\r\n        case WS_SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { TUserInfo } from '../types/types'\r\nimport {\r\n    USER_SIGN_UP_REQUEST,\r\n    USER_SIGN_UP_SUCCESS,\r\n    USER_SIGN_UP_FAILED,\r\n    USER_LOG_IN_REQUEST,\r\n    USER_LOG_IN_SUCCESS,\r\n    USER_LOG_IN_FAILED,\r\n    USER_LOG_OUT_REQUEST,\r\n    USER_LOG_OUT_SUCCESS,\r\n    USER_LOG_OUT_FAILED,\r\n    USER_RESET_REQUEST,\r\n    USER_RESET_SUCCESS,\r\n    USER_RESET_FAILED,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAILED,\r\n    USER_FORGOT_REQUEST,\r\n    USER_FORGOT_SUCCESS,\r\n    USER_FORGOT_FAILED,\r\n    GET_USER_REFRESH_REQUEST,\r\n    GET_USER_REFRESH_SUCCESS,\r\n    GET_USER_REFRESH_FAILED,\r\n    USER_NEED_TO_REFRESH,\r\n    PROFILE_IS_READY,\r\n    USER_PROFILE_CHANGE_REQUEST,\r\n    USER_PROFILE_CHANGE_SUCCESS,\r\n    USER_PROFILE_CHANGE_FAILED,\r\n    CLEAR_ERROR_PROFILE,\r\n    CLEAR_ERROR_FORGOT,\r\n    CLEAR_ERROR_REGISTRATION,\r\n} from \"../actions/auth\";\r\nimport { TAuthActions } from '../actions/auth'\r\ntype TinitialRegistation = {\r\n    hasError: boolean;\r\n    error: null | string | number;\r\n    isLoading: boolean;\r\n    regInfo: null | object;\r\n}\r\n\r\nexport const initialRegistation: TinitialRegistation = {\r\n    hasError: false,\r\n    error: null,\r\n    isLoading: false,\r\n    regInfo: null,\r\n};\r\n\r\ntype TinitialUserProfile = {\r\n    hasError: boolean;\r\n    error: null | object;\r\n    isLoading: boolean;\r\n    userInfo: TUserInfo | null;\r\n    logged: boolean;\r\n    needToRefresh: boolean;\r\n    refreshedTokens: null | object;\r\n    failedToRefresh: boolean;\r\n    profileReady: boolean;\r\n    loadingUser: boolean;\r\n    loadingRefresh: boolean;\r\n    refreshed: boolean;\r\n    changeIsLoading: boolean;\r\n    errorMessage: null | object;\r\n    failedToChange: boolean;\r\n}\r\nexport const initialUserProfile: TinitialUserProfile = {\r\n    hasError: false,\r\n    error: null,\r\n    isLoading: false,\r\n    userInfo: null,\r\n    logged: false,\r\n    needToRefresh: false,\r\n    refreshedTokens: null,\r\n    failedToRefresh: false,\r\n    profileReady: false,\r\n    loadingUser: false,\r\n    loadingRefresh: false,\r\n    refreshed: false,\r\n    changeIsLoading: false,\r\n    errorMessage: null,\r\n    failedToChange: false,\r\n};\r\ntype TinitialForgotRequest = {\r\n    hasError: boolean;\r\n    error: null | string | number;\r\n    isLoading: boolean;\r\n    sent: boolean;\r\n    result: null | object;\r\n    sending: boolean;\r\n}\r\nexport const initialForgotRequest: TinitialForgotRequest = {\r\n    hasError: false,\r\n    error: null,\r\n    isLoading: false,\r\n    sent: false,\r\n    result: null,\r\n    sending: false,\r\n};\r\n\r\nexport const userRegistrationInfo = (state = initialRegistation, action: TAuthActions): TinitialRegistation => {\r\n    switch (action.type) {\r\n        case USER_SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case USER_SIGN_UP_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                regInfo: action.value,\r\n                isLoading: false,\r\n                hasError: false,\r\n            };\r\n        }\r\n        case USER_SIGN_UP_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                hasError: true,\r\n                error: action.value,\r\n            };\r\n        }\r\n        case CLEAR_ERROR_REGISTRATION: {\r\n            return {\r\n                ...state,\r\n                hasError: false,\r\n                error: null,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const userInfo = (state = initialUserProfile, action: TAuthActions) => {\r\n    switch (action.type) {\r\n        case USER_LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case USER_LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userInfo: action.value,\r\n                hasError: false,\r\n                logged: true,\r\n                isLoading: false,\r\n                profileReady: true,\r\n                errorMessage: null,\r\n            };\r\n        }\r\n        case USER_LOG_IN_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                hasError: true,\r\n                error: action.value,\r\n            };\r\n        }\r\n        case USER_LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case USER_LOG_OUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                hasError: false,\r\n                error: null,\r\n                isLoading: false,\r\n                userInfo: action.value,\r\n                logged: false,\r\n                needToRefresh: false,\r\n                refreshedTokens: null,\r\n                failedToRefresh: false,\r\n                profileReady: false,\r\n            };\r\n        }\r\n        case USER_LOG_OUT_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.value,\r\n            };\r\n        }\r\n        case GET_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loadingUser: true,\r\n            };\r\n        }\r\n        case GET_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profileReady: true,\r\n                userInfo: action.value,\r\n                hasError: false,\r\n                logged: true,\r\n                isLoading: false,\r\n                loadingUser: false,\r\n                errorMessage: null\r\n            };\r\n        }\r\n        case GET_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                logged: false,\r\n                isLoading: false,\r\n                error: action.error,\r\n                hasError: true,\r\n                loadingUser: false,\r\n                errorMessage: action.errorMessage,\r\n            };\r\n        }\r\n        case USER_NEED_TO_REFRESH: {\r\n            return {\r\n                ...state,\r\n                needToRefresh: action.value,\r\n            };\r\n        }\r\n\r\n        case GET_USER_REFRESH_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loadingRefresh: true,\r\n                refreshed: false,\r\n            };\r\n        }\r\n        case GET_USER_REFRESH_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                refreshed: true,\r\n                refreshedTokens: action.value,\r\n                needToRefresh: false,\r\n                hasError: false,\r\n                isLoading: false,\r\n                loadingRefresh: false,\r\n                errorMessage: null,\r\n                error: null\r\n            };\r\n        }\r\n        case GET_USER_REFRESH_FAILED: {\r\n            return {\r\n                ...state,\r\n                refreshed: false,\r\n                isLoading: false,\r\n                failedToRefresh: true,\r\n                loadingRefresh: false,\r\n                needToRefresh: false,\r\n                error: action.error,\r\n                hasError: true,\r\n            };\r\n        }\r\n        case USER_PROFILE_CHANGE_REQUEST: {\r\n            return {\r\n                ...state,\r\n                changeIsLoading: true,\r\n            };\r\n        }\r\n        case USER_PROFILE_CHANGE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userInfo: action.value,\r\n                changeIsLoading: false,\r\n                hasError: false,\r\n                errorMessage: null,\r\n                error: null,\r\n                failedToChange: false,\r\n            };\r\n        }\r\n        case USER_PROFILE_CHANGE_FAILED: {\r\n            return {\r\n                ...state,\r\n                changeIsLoading: false,\r\n                hasError: true,\r\n                error: action.error,\r\n                errorMessage: action.errorMessage,\r\n                failedToChange: true,\r\n            };\r\n        }\r\n        case PROFILE_IS_READY: {\r\n            return {\r\n                ...state,\r\n                profileReady: action.value,\r\n            };\r\n        }\r\n        case CLEAR_ERROR_PROFILE: {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                hasError: false,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const forgotRequest = (state = initialForgotRequest, action: TAuthActions): TinitialForgotRequest => {\r\n    switch (action.type) {\r\n        case USER_FORGOT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                sending: true,\r\n            };\r\n        }\r\n        case USER_FORGOT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                sending: false,\r\n                sent: true,\r\n                isLoading: false,\r\n                hasError: false,\r\n                result: action.value,\r\n            };\r\n        }\r\n        case USER_FORGOT_FAILED: {\r\n            return {\r\n                ...state,\r\n                sent: false,\r\n                sending: false,\r\n                hasError: true,\r\n                error: action.value,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case USER_RESET_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case USER_RESET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                result: action.value,\r\n                hasError: false,\r\n                sent: false,\r\n            };\r\n        }\r\n        case USER_RESET_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                result: null,\r\n                hasError: true,\r\n                error: action.error,\r\n            };\r\n        }\r\n        case CLEAR_ERROR_FORGOT: {\r\n            return {\r\n                ...state,\r\n                hasError: false,\r\n                error: null,\r\n                sent: false,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { TIndexActions } from '../actions/index';\r\nimport { TIngredient, TModalData, TOrderSend } from '../types/types';\r\nimport { webSocketAll } from \"./webSocket\";\r\nimport {\r\n    GET_INGREDIENTS_API_REQUEST,\r\n    GET_INGREDIENTS_API_SUCCESS,\r\n    GET_INGREDIENTS_API_FAILED,\r\n    CONSTRUCTOR_BUN,\r\n    CONSTRUCTOR_MAIN_INGREDIENTS,\r\n    MODAL_INGRIDIENT_OPEN,\r\n    MODAL_ORDER_OPEN,\r\n    MODAL_CLOSE,\r\n    MODAL_ORDER_ERROR,\r\n    WRITE_CURRENT_INGREDIENT,\r\n    DELETE_CURRENT_INGREDIENT,\r\n    SEND_ORDER_REQUEST,\r\n    SEND_ORDER_SUCCESS,\r\n    SEND_ORDER_FAILED,\r\n    TAB_SWITCH,\r\n    CONSTRUCTOR_CARD_CHANGE,\r\n    COUNT_TOTAL_PRICE,\r\n    COUNT_CARD,\r\n    CONSTRUCTOR_CLEAN,\r\n    MODAL_ORDER_DETAIL_OPEN,\r\n    WRITE_CURRENT_ORDER_DETAIL,\r\n    DELETE_CURRENT_ORDER_DETAIL,\r\n    GET_INFO_ONE_ORDER_REQUEST,\r\n    GET_INFO_ONE_ORDER_SUCCESS,\r\n    GET_INFO_ONE_ORDER_ERROR,\r\n} from \"../actions/index\";\r\n\r\nimport {\r\n    userRegistrationInfo,\r\n    userInfo,\r\n    forgotRequest,\r\n} from \"./auth\";\r\n\r\ntype TinitialIngredientsApi = {\r\n    hasError: boolean;\r\n    error: null | object;\r\n    isLoading: boolean;\r\n    burgerData: null | Array<TIngredient>\r\n}\r\n\r\nexport const initialIngredientsApi: TinitialIngredientsApi = {\r\n    hasError: false,\r\n    error: null,\r\n    isLoading: false,\r\n    burgerData: null,\r\n};\r\n\r\ntype TinitialIngredientsConstructorList = {\r\n    bun: TIngredient | null\r\n    mainIngredients: Array<TIngredient>;\r\n}\r\n\r\nexport const initialIngredientsConstructorList: TinitialIngredientsConstructorList = {\r\n    bun: null,\r\n    mainIngredients: [],\r\n};\r\n\r\ntype TinitialCurrentIngredient = {\r\n    name: string;\r\n    image: null | string;\r\n    calories: null | number;\r\n    proteins: null | number;\r\n    fat: null | number;\r\n    carbohydrates: null | number;\r\n}\r\n\r\nexport const initialCurrentIngredient: TinitialCurrentIngredient = {\r\n    name: \"\",\r\n    image: null,\r\n    calories: null,\r\n    proteins: null,\r\n    fat: null,\r\n    carbohydrates: null,\r\n};\r\ntype TinitialModal = {\r\n    ingridientModal: boolean;\r\n    orderModal: boolean;\r\n    detailOrderInfo: boolean;\r\n    allClose: boolean;\r\n    data: null | TModalData\r\n    isLoading: boolean;\r\n    error: null | object;\r\n    hasError: boolean;\r\n    modalError: boolean;\r\n}\r\nexport const initialModal: TinitialModal = {\r\n    ingridientModal: false,\r\n    orderModal: false,\r\n    detailOrderInfo: false,\r\n    allClose: true,\r\n    data: null,\r\n    isLoading: false,\r\n    error: null,\r\n    hasError: false,\r\n    modalError: false,\r\n};\r\ntype TinitialOrder = {\r\n    hasError: boolean;\r\n    error: null | object;\r\n    isLoading: boolean;\r\n    orderInfo: null | TOrderSend;\r\n    success: boolean;\r\n}\r\nexport const initialOrder: TinitialOrder = {\r\n    hasError: false,\r\n    error: null,\r\n    isLoading: false,\r\n    orderInfo: null,\r\n    success: false,\r\n};\r\ntype TinitialTab = {\r\n    currentTab: string;\r\n}\r\nexport const initialTab: TinitialTab = {\r\n    currentTab: \"bun\",\r\n};\r\ntype TinitialPrice = {\r\n    totalPrice: null | number;\r\n}\r\nexport const initialPrice: TinitialPrice = {\r\n    totalPrice: null,\r\n};\r\n\r\ntype TinitialCurrentOrder = {\r\n    number: null | number;\r\n    name: string;\r\n    status: string;\r\n    ingredients: Array<object>;\r\n    createdAt: string;\r\n}\r\nexport const initialCurrentOrder: TinitialCurrentOrder = {\r\n    number: null,\r\n    name: \"\",\r\n    status: \"\",\r\n    ingredients: [],\r\n    createdAt: \"\",\r\n};\r\n\r\nexport const ingredientsApiList = (state = initialIngredientsApi, action: TIndexActions): TinitialIngredientsApi => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_API_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_API_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                burgerData: action.items,\r\n                isLoading: false,\r\n                hasError: false,\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_API_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                hasError: true,\r\n                burgerData: null,\r\n                error: action.error,\r\n            };\r\n        }\r\n        case COUNT_CARD: {\r\n            return {\r\n                ...state,\r\n                burgerData: action.value,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const ingredientsConstructorList = (\r\n    state = initialIngredientsConstructorList,\r\n    action: TIndexActions\r\n): TinitialIngredientsConstructorList => {\r\n    switch (action.type) {\r\n        case CONSTRUCTOR_BUN: {\r\n            return {\r\n                ...state,\r\n                bun: action.bun,\r\n            };\r\n        }\r\n        case CONSTRUCTOR_MAIN_INGREDIENTS: {\r\n            return {\r\n                ...state,\r\n                mainIngredients: action.mainIngredients,\r\n            };\r\n        }\r\n        case CONSTRUCTOR_CARD_CHANGE: {\r\n            return {\r\n                ...state,\r\n                mainIngredients: action.value,\r\n            };\r\n        }\r\n        case CONSTRUCTOR_CLEAN: {\r\n            return {\r\n                ...state,\r\n                mainIngredients: initialIngredientsConstructorList.mainIngredients,\r\n                bun: initialIngredientsConstructorList.bun,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const currentIngredient = (state = initialCurrentIngredient, action: TIndexActions): TinitialCurrentIngredient => {\r\n    switch (action.type) {\r\n        case WRITE_CURRENT_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                image: action.image,\r\n                calories: action.calories,\r\n                proteins: action.proteins,\r\n                fat: action.fat,\r\n                carbohydrates: action.carbohydrates,\r\n            };\r\n        }\r\n        case DELETE_CURRENT_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                name: \"\",\r\n                image: null,\r\n                calories: null,\r\n                proteins: null,\r\n                fat: null,\r\n                carbohydrates: null,\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const currentOrderDetail = (state = initialCurrentOrder, action: TIndexActions): TinitialCurrentOrder => {\r\n    switch (action.type) {\r\n        case WRITE_CURRENT_ORDER_DETAIL: {\r\n            return {\r\n                ...state,\r\n                number: action.number,\r\n                name: action.name,\r\n                status: action.status,\r\n                ingredients: action.ingredients,\r\n                createdAt: action.date,\r\n            };\r\n        }\r\n        case DELETE_CURRENT_ORDER_DETAIL: {\r\n            return {\r\n                ...state,\r\n                number: null,\r\n                name: \"\",\r\n                status: \"\",\r\n                ingredients: [],\r\n                createdAt: \"\",\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const modalInfo = (state = initialModal, action: TIndexActions): TinitialModal => {\r\n    switch (action.type) {\r\n        case MODAL_INGRIDIENT_OPEN: {\r\n            return {\r\n                ...state,\r\n                ingridientModal: action.open,\r\n                orderModal: false,\r\n                allClose: false,\r\n                modalError: false,\r\n            };\r\n        }\r\n        case MODAL_ORDER_OPEN: {\r\n            return {\r\n                ...state,\r\n                orderModal: action.open,\r\n                ingridientModal: false,\r\n                modalError: false,\r\n                allClose: false,\r\n            };\r\n        }\r\n        case MODAL_ORDER_DETAIL_OPEN: {\r\n            return {\r\n                ...state,\r\n                orderModal: false,\r\n                ingridientModal: false,\r\n                modalError: false,\r\n                detailOrderInfo: action.open,\r\n                allClose: false,\r\n            };\r\n        }\r\n        case MODAL_ORDER_ERROR: {\r\n            return {\r\n                ...state,\r\n                modalError: action.open,\r\n                ingridientModal: false,\r\n                allClose: false,\r\n            };\r\n        }\r\n        case MODAL_CLOSE: {\r\n            return {\r\n                ...state,\r\n                ingridientModal: false,\r\n                orderModal: false,\r\n                modalError: false,\r\n                detailOrderInfo: false,\r\n                allClose: true,\r\n            };\r\n        }\r\n        case GET_INFO_ONE_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case GET_INFO_ONE_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                data: action.value,\r\n                hasError: false,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case GET_INFO_ONE_ORDER_ERROR: {\r\n            return {\r\n                ...state,\r\n                hasError: true,\r\n                isLoading: false,\r\n                error: action.value,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const createdOrder = (state = initialOrder, action: TIndexActions): TinitialOrder => {\r\n    switch (action.type) {\r\n        case SEND_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        }\r\n        case SEND_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: true,\r\n                hasError: false,\r\n                orderInfo: action.data,\r\n            };\r\n        }\r\n        case SEND_ORDER_FAILED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                hasError: true,\r\n                error: action.error,\r\n                orderInfo: null,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const tabSwtich = (state = initialTab, action: TIndexActions): TinitialTab => {\r\n    switch (action.type) {\r\n        case TAB_SWITCH: {\r\n            return {\r\n                ...state,\r\n                currentTab: action.value,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport const totalPrice = (state = initialPrice, action: TIndexActions): TinitialPrice => {\r\n    switch (action.type) {\r\n        case COUNT_TOTAL_PRICE: {\r\n            return {\r\n                ...state,\r\n                totalPrice: action.value,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport const rootReducer = combineReducers({\r\n    apiList: ingredientsApiList,\r\n    constructorList: ingredientsConstructorList,\r\n    modalInfo: modalInfo,\r\n    currentIngredient: currentIngredient,\r\n    createdOrder: createdOrder,\r\n    tabSwtich: tabSwtich,\r\n    price: totalPrice,\r\n    registration: userRegistrationInfo,\r\n    userInfo: userInfo,\r\n    forgotRequest: forgotRequest,\r\n    webSocketAll: webSocketAll,\r\n    currentOrderDetail: currentOrderDetail,\r\n});","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/index';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { wsMiddleware } from \"../services/wsMiddleware/wsMiddleware\";\r\n\r\nimport {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE,\r\n    WS_CONNECTION_START,\r\n} from '../services/actions/webSocket';\r\nimport { GET_INFO_ONE_ORDER_SUCCESS } from '../services/actions/index';\r\n\r\nexport const wsActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onMessage: WS_GET_MESSAGE,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onSend: WS_SEND_MESSAGE,\r\n    onError: WS_CONNECTION_ERROR,\r\n    ordersInit: GET_INFO_ONE_ORDER_SUCCESS,\r\n\r\n};\r\n\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' && composeWithDevTools\r\n        ? composeWithDevTools({})\r\n        : compose;\r\n\r\nconst enchancer = composeEnhancers(applyMiddleware(thunk, wsMiddleware(wsActions)));\r\n\r\nexport const store = createStore(rootReducer, enchancer);\r\n","import { Dispatch, Action } from 'redux'\r\nimport { TWsActions } from '../types/types';\r\nimport { Middleware } from 'redux';\r\n\r\ninterface IEvent {\r\n    data: string,\r\n    message: string\r\n}\r\ninterface A<T = any> {\r\n    value: T\r\n}\r\n\r\n\r\nexport const wsMiddleware = (wsActions: TWsActions): Middleware => {\r\n    return (store: { dispatch: Dispatch }) => {\r\n        let socket: any = null;\r\n\r\n        return (next: Dispatch) => (action: A & Action) => {\r\n            const { dispatch } = store;\r\n            const { type, value } = action;\r\n            const {\r\n                wsInit,\r\n                onSend,\r\n                onOpen,\r\n                onClose,\r\n                onError,\r\n                onMessage,\r\n                ordersInit\r\n            } = wsActions;\r\n\r\n\r\n            if (type === wsInit) {\r\n                socket = new WebSocket(value);\r\n            }\r\n\r\n            if (type === onClose) {\r\n                socket.close(\"1000\", \"User left the page that has socket\");\r\n            }\r\n            if (socket) {\r\n                socket.onopen = (event: IEvent): void => {\r\n                    dispatch({ type: onOpen, value: event });\r\n                };\r\n                socket.onmessage = (event: IEvent): void => {\r\n                    const { data } = event;\r\n                    const parsedData = JSON.parse(data);\r\n\r\n                    dispatch({ type: onMessage, value: parsedData });\r\n\r\n                    dispatch({ type: ordersInit, value: parsedData });\r\n                };\r\n                socket.onerror = (event: IEvent): void => {\r\n\r\n                    dispatch({ type: onError, value: event });\r\n\r\n                };\r\n                socket.onclose = (event: IEvent): void => {\r\n                    dispatch({ type: onClose, value: event });\r\n                };\r\n\r\n                socket.send = (event: IEvent): void => {\r\n                    dispatch({ type: onSend, message: value })\r\n                }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.module.css';\r\nimport App from './components/app/app';\r\nimport { store } from \"./services/store\";\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename=\"react-burger\">\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"login_mainbox__2YpEX\",\"header\":\"login_header__23luc\",\"input\":\"login_input__2Ubk0\",\"button\":\"login_button__BrRPY\",\"text\":\"login_text__2XTxP\",\"link\":\"login_link__2rv9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ready\":\"OrderNumbersStyles_ready__3HrDt\",\"main\":\"OrderNumbersStyles_main__1vFni\",\"number\":\"OrderNumbersStyles_number__1p9XC\",\"table\":\"OrderNumbersStyles_table__2Qnor\",\"readyNumbers\":\"OrderNumbersStyles_readyNumbers__XCwEU\",\"readyHeader\":\"OrderNumbersStyles_readyHeader__3AMlG\",\"inWorkTitle\":\"OrderNumbersStyles_inWorkTitle__2OQ9H\",\"inWorkNumbers\":\"OrderNumbersStyles_inWorkNumbers__16-HF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"register_mainbox__1pGaq\",\"header\":\"register_header__3ovOo\",\"input\":\"register_input__2zb8d\",\"button\":\"register_button__2lD9j\",\"link\":\"register_link__1YrJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"resetPassword_mainbox__uf3jL\",\"header\":\"resetPassword_header__3xGM_\",\"input\":\"resetPassword_input__sEUT4\",\"button\":\"resetPassword_button__ibLiJ\",\"link\":\"resetPassword_link__9PfCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient__container\":\"ingredient-details_ingredient__container__8HJfc\",\"ingredient__img\":\"ingredient-details_ingredient__img__27Lmf\",\"ingredient__info\":\"ingredient-details_ingredient__info__2yiSb\",\"ingredient__element\":\"ingredient-details_ingredient__element__3G2NB\",\"headerTextNoModal\":\"ingredient-details_headerTextNoModal__LPqdO\",\"image\":\"ingredient-details_image__3BR2n\",\"modalDetails\":\"ingredient-details_modalDetails___GSp2\",\"modalDetailsText\":\"ingredient-details_modalDetailsText__3cbe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feedStyles_feed__23Tvl\",\"headerText\":\"feedStyles_headerText__1LgRP\",\"feedList\":\"feedStyles_feedList___zJcl\",\"content\":\"feedStyles_content__1s7RS\",\"mainBox\":\"feedStyles_mainBox__8JcW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__space\":\"modal_modal__space__lmCTc\",\"modalBody\":\"modal_modalBody__NNPAh\",\"modal__close_icon\":\"modal_modal__close_icon__8g-C1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgeringredients_card\":\"burger-ingredients-card_burgeringredients_card__36h5k\",\"burgeringredients_card__ingredient_price\":\"burger-ingredients-card_burgeringredients_card__ingredient_price__1G5Iw\",\"burgeringredients_card__ingredient_name\":\"burger-ingredients-card_burgeringredients_card__ingredient_name__-GGUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3oySj\",\"container_left\":\"app_container_left__2BdKF\",\"container_right\":\"app_container_right__3mMa8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"forgotPassword_mainbox__1uB1b\",\"link\":\"forgotPassword_link__1Bv41\",\"button\":\"forgotPassword_button__1Ah5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgeringredients__tab_selector\":\"burger-ingredients_burgeringredients__tab_selector__2Kr0J\",\"burgeringredients__scroll_container\":\"burger-ingredients_burgeringredients__scroll_container__HfQOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_ingredients_list\":\"burger-ingredients-category_burger_ingredients_list__2Jwyq\",\"link\":\"burger-ingredients-category_link__352RI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"errorStyles_box__3CKt_\",\"text\":\"errorStyles_text__3E7Gv\"};"],"sourceRoot":""}